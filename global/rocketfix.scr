// This script forces all bazooka/Panzerschreck rockets to face the correct angles.
//
// Add "exec global/rocketfix.scr" into "global/dmprecache.scr", or add it after "level waittill spawn" to use this script.
// This script only works for MOHAA Reborn 1.12 / Nightfall
//
// Set "local.rocket.playerowner = local.player" or similar (anything != NIL) in any other mod that uses "bazookashell.tik", "bazookashell_dm.tik", or "Panzerschreckshell.tik" models,
// to prevent this script from rotating those projectiles by 180 degrees.
//
// This script only works in maps that have less than 860 total entites.

main:

	while(1)
	{
		for(local.e = 0; local.e <= 868; local.e++)
		{
			local.entity = getentity(local.e)
			if(local.entity != NULL && local.entity.classname == Projectile && local.entity.readjusted != 1 && (local.entity.playerowner == NIL || local.entity.playerowner == NULL) && (local.entity.model == "models/projectiles/bazookashell_dm.tik" || local.entity.model == "models/projectiles/bazookashell.tik" || local.entity.model == "models/projectiles/panzerschreckshell.tik"))
			{
				local.entity hide
				local.entity.readjusted = 1
				local.entity.scale = 0.0001

				local.new = spawn script_model
				local.new model local.entity.model
				local.new.origin = local.entity.origin
				local.new.angles = ( (local.entity.angles[0] * -1) (local.entity.angles[1] + 180) local.entity.angles[2] )
				local.new solid
				local.new physics_on // without this, the rockets will not face the proper direction.
				local.new glue local.entity
				local.new thread removerocket local.entity
			}
		}
		waitframe
	}
end

removerocket local.entity:

	self thread waittill_touch local
	local.hitthing = self
	while(local.hitthing == self || local.hitthing == local.entity)
	{
		self waittill touch
		local.hitthing = parm.other
	}
	if(self != NULL) { self remove }
end

waittill_touch local.thread:

	while(1)
	{
		if(self == NULL || vector_length(self.origin) > 12000) // if moving outside the map or NULL.
		{
			if(local.thread != NULL) { local.thread remove } // prematurely end "waittill touch" and its thread (nothing else runs after it).
			if(self != NULL) { self remove }
			end
		}

		if(self.velocity == ( 0 0 0 )) { end } // add any other conditions here to prematurely end "waittill touch".
		waitframe
	}
end