main local.name local.originbomb local.anglesbomb local.originwalkie local.angleswalkie local.damageradius local.blowup_at_origin local.pulsating local.pulsetime: // runs only once when map loads.

exec global/aliascache_triggersounds.scr radiobomb_walkie

 if(local.blowup_at_origin == 1) { local.move1st_b4blowup = 0 }
 else { local.move1st_b4blowup = 1 }

 level.radiobomb_origin[local.name] = local.originbomb
 level.radiobomb_angles[local.name] = local.anglesbomb
 level.walkietalkie_origin[local.name] = local.originwalkie
 level.walkietalkie_angles[local.name] = local.angleswalkie

 level.rw_damageradius[local.name] = local.damageradius
 level.rw_move1st_b4blowup[local.name] = local.move1st_b4blowup
 level.rw_pulsating[local.name] = local.pulsating

 if(local.pulsetime != NIL) { level.rw_pulsetime[local.name] = local.pulsetime }
 if(local.pulsetime == NIL) { level.rw_pulsetime[local.name] = 8 } // default: 8 seconds of radiobomb's red pulsating model after blowing up, before it's removed.

 thread radiobomb local.originbomb local.anglesbomb local.name
 thread walkietalkie local.originwalkie local.angleswalkie local.name
end

////////////////////////////////////////////////////////////////////////

change_originangles local.name local.originbomb local.anglesbomb local.originwalkie local.angleswalkie: // in case you want to randomize the origins after the radio and walkie respawn.
													// randomization must be controlled by a while-loop outside of this script.
 level.radiobomb_origin[local.name] = local.originbomb
 level.radiobomb_angles[local.name] = local.anglesbomb
 level.walkietalkie_origin[local.name] = local.originwalkie
 level.walkietalkie_angles[local.name] = local.angleswalkie
end

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////

radiobombblowup local.origin local.angles local.name:

 if(level.rw_move1st_b4blowup[local.name] == 0 || (level.rw_move1st_b4blowup[local.name] == 1 && local.origin != level.radiobomb_origin[local.name]))
 {
	if(level.radiobomb_blowup[local.name] != 1)
	{
		local.explosion = spawn script_model
		local.explosion model "animate/fx_explosion_mine.tik"
		local.explosion.origin = local.origin + ( 0 0 10 )
		local.explosion.angles = local.angles
		local.explosion notsolid
		local.explosion.scale = 2
		local.explosion anim start

		local.debris = spawn script_model
		local.debris model "animate/fx_mortar_dirt.tik"
		local.debris.origin = local.origin + ( 0 0 10 )
		local.debris.angles = local.angles
		local.debris notsolid
		local.debris.scale = 1.5
		local.debris anim start

		//local.explosion playsound explode_mine
		//radiusdamage local.explosion.origin 500 level.rw_damageradius[local.name]
		local.blewup = 1
		for(local.i = 1; local.i <= $player.size; local.i++) // use this instead of radiusdamage, so explosions can count as score/kills
		{
			if(vector_length(local.explosion.origin - $player[local.i].origin) <= level.rw_damageradius[local.name])
			{
				if(self == NIL || self == NULL)
				{
					if($player[local.i].driving != 1 && $player[local.i].flying != 1 && $player[local.i] cansee local.debris 360)
					{
						$player[local.i] damage $world 500 $world (0 0 0) (0 0 0) (0 0 0) 0 9 9 0
					}
					else if($player[local.i].drivingent != NIL && $player[local.i].drivingent != NULL)
					{
						if($player[local.i].flying == 1) { $("planehit" + $player[local.i].entnum) damage $world 500 $world (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
						else { $player[local.i].drivingent damage $world 500 $world (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
					}
				}
				else if($player[local.i] != self && $player[local.i].dmteam == self.dmteam && getcvar("g_teamdamage") != "1" && getcvar("g_gametype") != "1") { local.blewup = 0 }
				else
				{
					if($player[local.i].driving != 1 && $player[local.i].flying != 1 && $player[local.i] cansee local.debris 360)
					{
						$player[local.i] damage self 500 self (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 // "damage" does not hurt teammates, but scriptbazookaexplosion.tik does
					}
					else if($player[local.i].drivingent != NIL && $player[local.i].drivingent != NULL)
					{
						$player[local.i].drivingent.shooter = self
						if($player[local.i].flying == 1) { $("planehit" + $player[local.i].entnum) damage self 500 self (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
						else { $player[local.i].drivingent damage self 500 self (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
					}
				}
			}
		}

		waitframe
		if(local.blewup == 1) { radiusdamage local.explosion.origin 500 level.rw_damageradius[local.name] }
		local.explosion remove
		local.debris remove

		if(level.rw_pulsating[local.name] == 1) { thread pulsating_afterglow local.origin local.angles local.name }
	}

	if($("rbomb_trigger1" + local.name) != NULL)
	{
		$("rbomb_trigger1" + local.name).origin = level.radiobomb_origin[local.name] // if the bomb was on the ground, move it back to its original spawn location
		$("rbomb_trigger1" + local.name).angles = level.radiobomb_angles[local.name] // otherwise if carried by a player, $rbomb_trigger1 = NULL (not spawned in yet by "radiobomb" thread).
		$("rbomb_trigger1" + local.name).model = "animate/pulse_radiobomb_pickup.tik"
	}
 }

 if(level.rw_move1st_b4blowup[local.name] == 1 && local.origin == level.radiobomb_origin[local.name]) // in case the walkie talkie player tries to blow up a bomb that hasn't moved from its spawn yet.
 {
 	level.bombstill_at1storigin[local.name] = 1 // only used to turn on/off iprint commands in walkie talkie's "scan_player" thread.
 }
end

////////////////////////////////////////////////////////////////////////

pulsating_afterglow local.origin local.angles local.name:

	local.bombpulse = spawn script_model
	local.bombpulse model "animate/pulse_radiobomb.tik"
	local.bombpulse.origin = local.origin
	local.bombpulse.angles = local.angles
	local.bombpulse notsolid

	wait level.rw_pulsetime[local.name] // pulsating radiobomb ghost appears for local.pulsetime seconds at the explosion's origin, after blowing up.
	local.bombpulse remove
end

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////

radiobomb local.origin local.angles local.name:

 local.trigger = spawn trigger_use targetname ("rbomb_trigger1" + local.name) 	
 local.trigger model "animate/pulse_radiobomb_pickup.tik"
 local.trigger setsize ( -20 -20 -20 ) ( 20 20 20 )
 local.trigger.scale = 1
 //local.trigger light 0 0 1 100
 local.trigger show
 //local.trigger droptofloor
 local.trigger notsolid

 if(level.radiobomb_blowup[local.name] != 1) { local.trigger.origin = local.origin
					       local.trigger.angles = local.angles } 

 if(level.radiobomb_blowup[local.name] == 1 || level.playerheld_explode[local.name] == 1) // when a player explodes while holding the rbomb, force the rbomb respawn back to initial origin.
 { 
  local.trigger.origin = level.radiobomb_origin[local.name]
  local.trigger.angles = level.radiobomb_angles[local.name]
  level.rbomb_dropped[local.name] = 0
 }

 if(level.radiobomb_origin[local.name] != local.origin && level.playerheld_explode[local.name] != 1) { local.trigger.model = "animate/radiobomb.tik" }

 level.radiobomb_blowup[local.name] = 0 // this makes sure the "radiobombblowup" thread isn't triggered again, shortly after a player picks up the recently-exploded bomb.
 level.playerheld_explode[local.name] = 0

 local.trigger waittill trigger
 local.trigger nottriggerable

 local.player = parm.other
 if(local.player.inuse == 1 || local.player.dead == 1)
 {
  if(local.player.dead != 1) { local.player iprint "Cannot use. You are holding something already." }
  wait 1
  local.trigger remove
  thread radiobomb local.origin local.angles local.name
  end
 }
 else
 {
  if(level.rbomb_dropped[local.name] != 1) { local.trigger message ("*** You have acquired a radiobomb. ***") }
  if(level.rbomb_dropped[local.name] == 1) { local.trigger message ("*** You have picked up a radiobomb. ***") }
  local.player.inuse = 1
  local.player playsound radiobombplant
  local.player thread doit local.name local.origin local.angles
  waitframe
  local.trigger remove
 }
end

doit local.name local.origin local.angles:

   //self iprint ("Tuned to:   " + local.name)
   self iprint ("Hold the USE key for 2 seconds to drop/plant radiobomb: " + local.name)
   //self iprint ("CAUTION: The player holding the walkie talkie will kill you if they hold the USE key!")

   if(self.isdog != 1) { self attachmodel models/animate/radiobomb.tik "Bip01 R Thigh" 0.5 ("rbomb1_1" + local.name) 1 -1 -1 -1 -1 ( 0 0 3 ) } //( -up +down, +forward -backward, +right -left )
   else { self.dog attachmodel models/animate/radiobomb.tik "Bip01 Spine" 0.5 ("rbomb1_1" + local.name) 1 -1 -1 -1 -1 ( 0 0 3 ) }
   $("rbomb1_1" + local.name).angles = ( 0 180 20 )

   local.static = spawn script_model
   local.static model "items/cigarette.tik"
   local.static.scale = 0.001
   local.static.origin = self.origin
   local.static notsolid
   //local.static light 0 0 1 70
   local.static glue self
   local.static show

   $("rbomb_trigger1" + local.name) nottriggerable
   waitframe
   $("rbomb_trigger1" + local.name) remove

   //if(level.rbomb_dropped[local.name] != 1) { self stufftext "say *** I have acquired a radiobomb. ***" }
   //if(level.rbomb_dropped[local.name] == 1) { self stufftext "say *** I picked up a radiobomb. ***" }
   
   local.result = self waitthread scan_player local.name
   if(local.result != left)
   {
     self.inuse = 0
     if($("rbomb1_1" + local.name) != NULL) { $("rbomb1_1" + local.name) remove }
     //self stufftext "say *** I dropped a radiobomb. ***"
     local.static unglue
     local.static remove
     level.rbomb_dropped[local.name] = 1

     if(level.rw_bombnowplanted[local.name] != 1) 
     {
     	if(level.rbomb_spectator[local.name] == 1)
     	{
		level.rbomb_spectator[local.name] = 0
		goto radiobomb local.origin local.angles local.name
     	}
	
	local.droppedorigin = trace self.origin (self.origin + angles_toforward( 90 0 0 ) * 10240)
	goto radiobomb local.droppedorigin self.angles local.name
     }
     if(level.rw_bombnowplanted[local.name] == 1) 
     { 
	thread radiobomb self.origin self.angles local.name // using "thread" here allows bomb to be planted faster.

	level.rw_bombnowplanted[local.name] = 0
     }
   }
   if(local.result == left) { goto radiobomb local.origin local.angles local.name }
end

scan_player local.name:

 local.result = ok
 local.team = self.dmteam
 local.count = 0
 local.dog = self.isdog
 while(1)
 {
  	if(self == NULL)
  	{
		local.result = left
		end local.result
  	}
  	else
  	{
		level.bombstill_at1storigin[local.name] = 0 // as soon as a player picks up a radiobomb from its 1st origin, make this 0.

		if(self.isdog == 1 && local.dog != 1)
		{
			if($("rbomb1_1" + local.name) != NULL) { $("rbomb1_1" + local.name) remove }
			self.dog attachmodel models/animate/radiobomb.tik "Bip01 Spine" 0.5 ("rbomb1_1" + local.name) 1 -1 -1 -1 -1 ( 0 0 3 )
			for(local.i = 1; local.i <= $("rbomb1_1" + local.name).size; local.i++) { $("rbomb1_1" + local.name)[local.i].angles = ( 0 180 20 ) }
			local.dog = 1
		}
		if(self.isdog != 1 && local.dog == 1)
		{
			if($("rbomb1_1" + local.name) != NULL) { $("rbomb1_1" + local.name) remove }
			self attachmodel models/animate/radiobomb.tik "Bip01 R Thigh" 0.5 ("rbomb1_1" + local.name) 1 -1 -1 -1 -1 ( 0 0 3 )
			for(local.i = 1; local.i <= $("rbomb1_1" + local.name).size; local.i++) { $("rbomb1_1" + local.name)[local.i].angles = ( 0 180 20 ) }
			local.dog = 0
		}

		local.planttimer = 0
		while(self.useheld == 1 && self.dmteam == local.team && isalive self && self.fellundermap != 1)
		{
			if(local.planttimer == 0) { self stopwatch 1.5 }
			if(local.planttimer >= 15)
			{  
				self stopwatch 0
				self iprint ("You planted a radiobomb, named: " + local.name)
				level.rw_bombnowplanted[local.name] = 1

    				end local.result // plants the bomb after holding for 2 seconds, removes from player's hand and drops to the ground.				      
			}
			local.planttimer++
			wait 0.1
		}

   		if(self.dmteam != local.team || !isalive self || self.dmteam == spectator)
   		{
			if(self.dmteam == spectator || isalive self) { level.rbomb_spectator[local.name] = 1 }
    			end local.result
   		}

		self stopwatch 0

		if(level.radiobomb_blowup[local.name] == 1) 
		{ 
			waitthread radiobombblowup self.origin self.angles local.name // whenever the player holding a walkie talkie holds USE key, the bomb will blow up at the player's origin.

    			end local.result
		}
  	}
  	wait 0.1
 }
end

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////

walkietalkie local.origin local.angles local.name:

 local.trigger = spawn trigger_use targetname ("rwalkie_trigger1" + local.name)
 local.trigger model "items/walkietalkie.tik" 
 if(level.radiobomb_blowup[local.name] != 1 || level.bombstill_at1storigin[local.name] == 1) { local.trigger.origin = local.origin   // if the bomb was blown up, respawn the walkie back to its first spawn origin.
											       local.trigger.angles = local.angles } // walkie talkie drops from player to ground after blowing up the bomb with USE key.
 if(level.radiobomb_blowup[local.name] == 1 && level.bombstill_at1storigin[local.name] != 1) { local.trigger.origin = level.walkietalkie_origin[local.name]
											       local.trigger.angles = level.walkietalkie_angles[local.name]
											       level.rbomb_dropped[local.name] = 0 }

 local.trigger setsize ( -20 -20 -20 ) ( 20 20 20 )
 local.trigger.scale = 1
 //local.trigger light 0.5 0 1 100
 local.trigger show
 local.trigger droptofloor
 local.trigger notsolid

 level.radiobomb_blowup[local.name] = 0

 local.trigger waittill trigger
 local.trigger nottriggerable

 local.player = parm.other
 if(local.player.inuse == 1 || local.player.dead == 1)
 {
  if(local.player.dead != 1) { local.player iprint "Cannot use. You are holding something already." }
  wait 1
  local.trigger remove
  thread walkietalkie local.origin local.angles local.name
  end
 }
 else
 {
  if(level.rwalkie_dropped[local.name] != 1) { local.trigger message ("*** You have acquired a walkie talkie.***") }
  if(level.rwalkie_dropped[local.name] == 1) { local.trigger message ("*** You have picked up a walkie talkie. ***") }
  local.player.inuse = 1

  local.random = randomint(2)
  if(local.random == 0) { local.player playsound ledpickup1 }
  if(local.random == 1) { local.player playsound ledpickup2 }
  local.player thread doit2 local.name local.origin local.angles
  waitframe
  local.trigger remove
 }
end

doit2 local.name local.origin local.angles:

   //self iprint ("Tuned to:   " + local.name)
   self iprint ("Hold the USE key for 2 seconds to blow up radiobomb: " + local.name)
   //self iprint ("CAUTION: You will kill the player holding the radiobomb! Wait until they drop it first.")

   if(self.isdog != 1) { self attachmodel models/static/scr536.tik "Bip01 R Thigh" 0.75 ("rwalkie1_1" + local.name) 1 -1 -1 -1 -1 ( 0 0 4 ) } //( -up +down, +forward -backward, +right -left )
   if(self.isdog == 1) { self.dog attachmodel models/static/scr536.tik "Bip01 Spine" 0.75 ("rwalkie1_1" + local.name) 1 -1 -1 -1 -1 ( 0 0 6 ) }
   $("rwalkie1_1" + local.name).angles = ( 90 180 20 )

   local.static = spawn script_model
   local.static model "items/cigarette.tik"
   local.static.scale = 0.001
   local.static.origin = self.origin
   local.static notsolid
   //local.static light 0.5 0 1 70
   local.static glue self
   local.static show

   $("rwalkie_trigger1" + local.name) nottriggerable
   waitframe
   $("rwalkie_trigger1" + local.name) remove

   //if(level.rwalkie_dropped[local.name] != 1) { self stufftext "say *** I have acquired a walkie talkie. ***" }
   //if(level.rwalkie_dropped[local.name] == 1) { self stufftext "say *** I picked up a walkie talkie. ***" }
   
   local.result = self waitthread scan_player2 local.name
   if(local.result != left)
   {
     self.inuse = 0
     if($("rwalkie1_1" + local.name) != NULL) { $("rwalkie1_1" + local.name) remove }
     //self stufftext "say *** I dropped a walkie talkie. ***"
     local.static unglue
     local.static remove
     level.rwalkie_dropped[local.name] = 1
     self playsound fastradionoise

     if(level.rw_bombnowplanted[local.name] != 1) 
     {
	if(level.talkie_spectator[local.name] == 1)
	{
		level.talkie_spectator[local.name] = 0
		goto walkietalkie local.origin local.angles local.name
	}

	local.droppedorigin = trace self.origin (self.origin + angles_toforward( 90 0 0 ) * 10240)
	goto walkietalkie local.droppedorigin self.angles local.name
     }
     if(level.rw_bombnowplanted[local.name] == 1) 
     { 
	thread walkietalkie self.origin self.angles local.name // using "thread" here allows walkie to respawn faster.
	level.rw_bombnowplanted[local.name] = 0
     }
   }
   if(local.result == left) { goto walkietalkie local.origin local.angles local.name }
end

scan_player2 local.name:

 local.result = ok
 local.team = self.dmteam
 local.count = 0
 local.dog = self.isdog
 while(1)
 {
  	if(self == NULL)
  	{
		local.result = left
		end local.result
  	}
  	else
  	{
		if(self.isdog == 1 && local.dog != 1)
		{
			if($("rwalkie1_1" + local.name) != NULL) { $("rwalkie1_1" + local.name) remove }
			self.dog attachmodel models/static/scr536.tik "Bip01 Spine" 0.75 ("rwalkie1_1" + local.name) 1 -1 -1 -1 -1 ( 0 0 6 )
			for(local.i = 1; local.i <= $("rwalkie1_1" + local.name).size; local.i++) { $("rwalkie1_1" + local.name)[local.i].angles = ( 90 180 20 ) }
			local.dog = 1
		}
		if(self.isdog != 1 && local.dog == 1)
		{
			if($("rwalkie1_1" + local.name) != NULL) { $("rwalkie1_1" + local.name) remove }
			self attachmodel models/static/scr536.tik "Bip01 R Thigh" 0.75 ("rwalkie1_1" + local.name) 1 -1 -1 -1 -1 ( 0 0 4 )
			for(local.i = 1; local.i <= $("rwalkie1_1" + local.name).size; local.i++) { $("rwalkie1_1" + local.name)[local.i].angles = ( 90 180 20 ) }
			local.dog = 0
		}

		local.detonatetimer = 0
		while(self.useheld == 1 && self.dmteam == local.team && isalive self && self.fellundermap != 1)
		{ 
			if(local.detonatetimer == 0) { self stopwatch 1.5 }
			if(local.detonatetimer >= 15)  
			{  
				if($("rbomb_trigger1" + local.name) != NULL) { self thread radiobombblowup $("rbomb_trigger1" + local.name).origin $("rbomb_trigger1" + local.name).angles local.name }
				if($("rbomb_trigger1" + local.name) == NULL) { self thread radiobombblowup $("rbomb1_1" + local.name).origin $("rbomb1_1" + local.name).angles local.name
									       level.playerheld_explode[local.name] = 1 }

				level.radiobomb_blowup[local.name] = 1 // this is used in case $rbomb_trigger1 = NIL (bomb still in a player's hand/waist, now called $rbomb1_1).
				self stopwatch 0
				
				if(level.bombstill_at1storigin[local.name] == 1) 
				{ 
					self iprint ("You dropped a walkie talkie, named: " + local.name)
					self iprint ("The bomb must be moved from its 1st reset-origin before you can blow it up.")
	
					level.rw_bombnowplanted[local.name] = 1

					end local.result // commenting this line out disables dropping the walkie talkie (usually drops to the ground below player).
				}	
    				if(level.bombstill_at1storigin[local.name] != 1) 
				{ 
					end local.result // drop/respawn the walkie talkie if the bomb blew up (only if bomb is not at 1st origin)
				} 			 // "end local.result" will always happen here if local.move1st_b4blowup = 0 (also named: level.rw_move1st_b4blowup[local.name])
			}									      
			local.detonatetimer++
			wait 0.1
		}

   		if(self.dmteam != local.team || !isalive self || self.dmteam == spectator)
   		{
			if(self.dmteam == spectator || isalive self) { level.talkie_spectator[local.name] = 1 }
    			end local.result
   		}

		self stopwatch 0
  	}
  	wait 0.1
 }
end

