main:

	thread reset

	thread giantbomb
	thread lightbomb
	thread health
	thread grenade
	thread rocket
	thread snowball
	if(getcvar("mapname") == "training") { thread finaldoorkey }
end

reset:

	setcvar "check" "1"
	while(int(getcvar("check")) == 1) { waitframe }

	setcvar "check_giantbomb" "0"
	setcvar "check_lightbomb" "0"
	setcvar "check_health" "0"
	setcvar "check_grenade" "0"
	setcvar "check_rocket" "0"
	setcvar "check_snowball" "0"
	if(getcvar("mapname") == "training") { setcvar "check_finaldoorkey" "0" }
	setcvar "check" "0"
	thread reset
end

giantbomb:

	level waittill spawn
	wait 1 			// make sure all the triggers spawned in first, otherwise stack overflows could crash the server.
	level.check_teleporting_spectators = 0; thread giantbomb1; thread giantbomb2
end

lightbomb:

	level waittill spawn
	wait 1
	level.check_teleporting_spectators = 0; thread lightbomb1; thread lightbomb2
end

health:

	level waittill spawn
	wait 1
	level.check_teleporting_spectators = 0; thread health1; thread health2
end

grenade:

	level waittill spawn
	wait 1
	level.check_teleporting_spectators = 0; thread grenade1; thread grenade2
end

rocket:

	level waittill spawn
	wait 1
	level.check_teleporting_spectators = 0; thread rocket1; thread rocket2
end

snowball:

	level waittill spawn
	wait 1
	level.check_teleporting_spectators = 0; thread snowball1; thread snowball2
end

finaldoorkey: // for Training map only

	level waittill spawn
	wait 1
	level.check_teleporting_spectators = 0; thread finaldoorkey1; thread finaldoorkey2
end

////////////////////////////////////////////////////////////////////////

giantbomb1:

	while(int(getcvar("check_giantbomb")) != 1) { waitframe }

	if(level.check_teleporting_spectators == 1 || level.spot_bbomb == NIL || level.spot_bbomb.size < 1)
	{
		if(level.spot_bbomb == NIL || level.spot_bbomb.size < 1) { println("----- There are no Giant Bomb triggers in this map.") }
		if(level.check_teleporting_spectators == 1 && level.spot_bbomb.size >= 1) { println("----- Spectators are already teleporting. Turn it off ['check 0'], then type 'check_giantbomb 1' again.") }
		setcvar "check_giantbomb" "0"
		thread giantbomb1
		end
 	}

	if(level.check_teleporting_spectators != 1)
	{
		println("----- Teleporting all spectators to the " + level.spot_bbomb.size + " Giant Bomb origins.")
		if($player.size >= 1) { $player iprint ("----- Teleporting all spectators to the " + level.spot_bbomb.size + " Giant Bomb origins.") }

  		while(int(getcvar("check_giantbomb")) == 1 || int(getcvar("check_giantbomb")) == 2)
  		{
			for(local.i = 1; local.i <= $player.size; local.i++)
			{
				if(local.c == NIL) { local.c = 0 }
				if($player[local.i].dmteam == "spectator")
				{
					$player[local.i] tele level.spot_bbomb[local.c]
	
					local.tempstr = "Giant Bomb [" + local.c + "] = ( "
					local.tempstr = local.tempstr + string(int(level.spot_bbomb[local.c][0])) + " " 
					local.tempstr = local.tempstr + string(int(level.spot_bbomb[local.c][1])) + " "
					local.tempstr = local.tempstr + string(int(level.spot_bbomb[local.c][2])) + " ) "
					$player[local.i] iprint local.tempstr
				}
			}
			wait 3
			if(local.c != NIL) 
			{
				local.c++
				if(local.c >= level.spot_bbomb.size) { local.c = 0; wait 3 }
			}
			level.check_teleporting_spectators = 1
	 	}
	}
	if(level.check_teleporting_spectators == 1) { level.check_teleporting_spectators = 0 }

	if(int(getcvar("check_giantbomb")) != 0 && int(getcvar("check_giantbomb")) != 1 && int(getcvar("check_giantbomb")) != 2) { setcvar "check_giantbomb" "0" }
	if($player.size >= 1) { $player iprint ("----- Teleporting to Giant Bomb origins DISABLED.") }
	println("----- Teleporting to Giant Bomb origins DISABLED.")
  	thread giantbomb1

end

giantbomb2:

	while(int(getcvar("check_giantbomb")) != 2) { waitframe }

	if(level.spot_bbomb == NIL || level.spot_bbomb.size < 1)
	{
		println("----- There are no Giant Bomb triggers in this map.")
		setcvar "check_giantbomb" "0"
		thread giantbomb2
		end
 	}

	if($giantbomb_testent_1 == NULL)
	{
		println("----- Spawning visible entities at the " + level.spot_bbomb.size + " Giant Bomb origins.")
		if($player.size >= 1) { $player iprint ("----- Spawning visible entities at the " + level.spot_bbomb.size + " Giant Bomb origins.") }

		for(local.e = 0; local.e <= level.spot_bbomb.size - 1; local.e++)
		{
			local.ent = spawn script_model targetname ("giantbomb_testent_" + local.e)
			local.ent model "AMMO/us_bomb.tik"
			local.ent.origin = level.spot_bbomb[local.e] + ( 0 0 15 )
			local.ent.angles = ( 0 0 0 )
			local.ent scale 1.2
			local.ent light 0 0 1 100
			local.ent notsolid
		}
	}

	while(int(getcvar("check_giantbomb")) == 1 || int(getcvar("check_giantbomb")) == 2) { waitframe }

	for(local.e = 0; local.e <= level.spot_bbomb.size - 1; local.e++) { $("giantbomb_testent_" + local.e) remove }

	if(int(getcvar("check_giantbomb")) != 0 && int(getcvar("check_giantbomb")) != 1 && int(getcvar("check_giantbomb")) != 2) { setcvar "check_giantbomb" "0" }
	println("----- Entities at Giant Bomb origins REMOVED.")
	if($player.size >= 1) { $player iprint ("----- Entities at Giant Bomb origins REMOVED.") }
  	thread giantbomb2
end

////////////////////////////////////////////////////////////////////////

lightbomb1:

	while(int(getcvar("check_lightbomb")) != 1) { waitframe }

	if(level.check_teleporting_spectators == 1 || level.spot_lbomb == NIL || level.spot_lbomb.size < 1)
	{
		if(level.spot_lbomb == NIL || level.spot_lbomb.size < 1) { println("----- There are no Light Bomb triggers in this map.") }
		if(level.check_teleporting_spectators == 1 && level.spot_lbomb.size >= 1) { println("----- Spectators are already teleporting. Turn it off ['check 0'], then type 'check_lightbomb 1' again.") }
		setcvar "check_lightbomb" "0"
		thread lightbomb1
		end
 	}

	if(level.check_teleporting_spectators != 1)
	{
		println("----- Teleporting all spectators to the " + level.spot_lbomb.size + " Light Bomb origins.")
		if($player.size >= 1) { $player iprint ("----- Teleporting all spectators to the " + level.spot_lbomb.size + " Light Bomb origins.") }

  		while(int(getcvar("check_lightbomb")) == 1 || int(getcvar("check_lightbomb")) == 2)
  		{
			for(local.i = 1; local.i <= $player.size; local.i++)
			{
				if(local.c == NIL) { local.c = 0 }
				if($player[local.i].dmteam == "spectator")
				{
					$player[local.i] tele level.spot_lbomb[local.c]
	
					local.tempstr = "Light Bomb [" + local.c + "] = ( "
					local.tempstr = local.tempstr + string(int(level.spot_lbomb[local.c][0])) + " " 
					local.tempstr = local.tempstr + string(int(level.spot_lbomb[local.c][1])) + " "
					local.tempstr = local.tempstr + string(int(level.spot_lbomb[local.c][2])) + " ) "
					$player[local.i] iprint local.tempstr
				}
			}
			wait 3
			if(local.c != NIL) 
			{
				local.c++
				if(local.c >= level.spot_lbomb.size) { local.c = 0; wait 3 }
			}
			level.check_teleporting_spectators = 1
	 	}
	}
	if(level.check_teleporting_spectators == 1) { level.check_teleporting_spectators = 0 }

	if(int(getcvar("check_lightbomb")) != 0 && int(getcvar("check_lightbomb")) != 1 && int(getcvar("check_lightbomb")) != 2) { setcvar "check_lightbomb" "0" }
	if($player.size >= 1) { $player iprint ("----- Teleporting to Light Bomb origins DISABLED.") }
	println("----- Teleporting to Light Bomb origins DISABLED.")
  	thread lightbomb1

end

lightbomb2:

	while(int(getcvar("check_lightbomb")) != 2) { waitframe }

	if(level.spot_lbomb == NIL || level.spot_lbomb.size < 1)
	{
		println("----- There are no Light Bomb triggers in this map.")
		setcvar "check_lightbomb" "0"
		thread lightbomb2
		end
 	}

	if($lightbomb_testent_1 == NULL)
	{
		println("----- Spawning visible entities at the " + level.spot_lbomb.size + " Light Bomb origins.")
		if($player.size >= 1) { $player iprint ("----- Spawning visible entities at the " + level.spot_lbomb.size + " Light Bomb origins.") }

		for(local.e = 0; local.e <= level.spot_lbomb.size - 1; local.e++)
		{
			local.ent = spawn script_model targetname ("lightbomb_testent_" + local.e)
			local.ent model "emitters/electric_panelmelt.tik"
			local.ent.origin = level.spot_lbomb[local.e] + ( 0 0 15 )
			local.ent.angles = ( 0 0 0 )
			local.ent scale 1.25
			local.ent light 0 1 1 100
			local.ent notsolid
		}
	}

	while(int(getcvar("check_lightbomb")) == 1 || int(getcvar("check_lightbomb")) == 2) { waitframe }

	for(local.e = 0; local.e <= level.spot_lbomb.size - 1; local.e++) { $("lightbomb_testent_" + local.e) remove }

	if(int(getcvar("check_lightbomb")) != 0 && int(getcvar("check_lightbomb")) != 1 && int(getcvar("check_lightbomb")) != 2) { setcvar "check_lightbomb" "0" }
	println("----- Entities at Light Bomb origins REMOVED.")
	if($player.size >= 1) { $player iprint ("----- Entities at Light Bomb origins REMOVED.") }
  	thread lightbomb2
end

////////////////////////////////////////////////////////////////////////

health1:

	while(int(getcvar("check_health")) != 1) { waitframe }

	if(level.check_teleporting_spectators == 1 || level.spot_health == NIL || level.spot_health.size < 1)
	{
		if(level.spot_health == NIL || level.spot_health.size < 1) { println("----- There are no Health Triggers in this map.") }
		if(level.check_teleporting_spectators == 1 && level.spot_health.size >= 1) { println("----- Spectators are already teleporting. Turn it off ['check 0'], then type 'check_health 1' again.") }
		setcvar "check_health" "0"
		thread health1
		end
 	}

	if(level.check_teleporting_spectators != 1)
	{
		println("----- Teleporting all spectators to the " + level.spot_health.size + " Health Trigger origins.")
		if($player.size >= 1) { $player iprint ("----- Teleporting all spectators to the " + level.spot_health.size + " Health Trigger origins.") }

  		while(int(getcvar("check_health")) == 1 || int(getcvar("check_health")) == 2)
  		{
			for(local.i = 1; local.i <= $player.size; local.i++)
			{
				if(local.c == NIL) { local.c = 0 }
				if($player[local.i].dmteam == "spectator")
				{
					$player[local.i] tele level.spot_health[local.c]
	
					local.tempstr = "Health Trigger [" + local.c + "] = ( "
					local.tempstr = local.tempstr + string(int(level.spot_health[local.c][0])) + " " 
					local.tempstr = local.tempstr + string(int(level.spot_health[local.c][1])) + " "
					local.tempstr = local.tempstr + string(int(level.spot_health[local.c][2])) + " ) "
					$player[local.i] iprint local.tempstr
				}
			}
			wait 3
			if(local.c != NIL) 
			{
				local.c++
				if(local.c >= level.spot_health.size) { local.c = 0; wait 3 }
			}
			level.check_teleporting_spectators = 1
	 	}
	}
	if(level.check_teleporting_spectators == 1) { level.check_teleporting_spectators = 0 }

	if(int(getcvar("check_health")) != 0 && int(getcvar("check_health")) != 1 && int(getcvar("check_health")) != 2) { setcvar "check_health" "0" }
	if($player.size >= 1) { $player iprint ("----- Teleporting to Health Trigger origins DISABLED.") }
	println("----- Teleporting to Health Trigger origins DISABLED.")
  	thread health1

end

health2:

	while(int(getcvar("check_health")) != 2) { waitframe }

	if(level.spot_health == NIL || level.spot_health.size < 1)
	{
		println("----- There are no Health Triggers in this map.")
		setcvar "check_health" "0"
		thread health2
		end
 	}

	if($health_testent_1 == NULL)
	{
		println("----- Spawning visible entities at the " + level.spot_health.size + " Health Trigger origins.")
		if($player.size >= 1) { $player iprint ("----- Spawning visible entities at the " + level.spot_health.size + " Health Trigger origins.") }

		for(local.e = 0; local.e <= level.spot_health.size - 1; local.e++)
		{
			local.ent = spawn script_model targetname ("health_testent_" + local.e)
			local.ent model "items/item_50_healthbox.tik"
			local.ent.origin = level.spot_health[local.e] + ( 0 0 15 )
			local.ent.angles = ( 0 0 0 )
			local.ent scale 1.5
			local.ent light 0 1 0 100
			local.ent notsolid
		}
	}

	while(int(getcvar("check_health")) == 1 || int(getcvar("check_health")) == 2) { waitframe }

	for(local.e = 0; local.e <= level.spot_health.size - 1; local.e++) { $("health_testent_" + local.e) remove }

	if(int(getcvar("check_health")) != 0 && int(getcvar("check_health")) != 1 && int(getcvar("check_health")) != 2) { setcvar "check_health" "0" }
	println("----- Entities at Health Trigger origins REMOVED.")
	if($player.size >= 1) { $player iprint ("----- Entities at Health Trigger origins REMOVED.") }
  	thread health2
end

////////////////////////////////////////////////////////////////////////

grenade1:

	while(int(getcvar("check_grenade")) != 1) { waitframe }

	if(level.check_teleporting_spectators == 1 || level.spot_grenade == NIL || level.spot_grenade.size < 1)
	{
		if(level.spot_grenade == NIL || level.spot_grenade.size < 1) { println("----- There are no Grenade Ammo triggers in this map.") }
		if(level.check_teleporting_spectators == 1 && level.spot_grenade.size >= 1) { println("----- Spectators are already teleporting. Turn it off ['check 0'], then type 'check_grenade 1' again.") }
		setcvar "check_grenade" "0"
		thread grenade1
		end
 	}

	if(level.check_teleporting_spectators != 1)
	{
		println("----- Teleporting all spectators to the " + level.spot_grenade.size + " Grenade Ammo origins.")
		if($player.size >= 1) { $player iprint ("----- Teleporting all spectators to the " + level.spot_grenade.size + " Grenade Ammo origins.") }

  		while(int(getcvar("check_grenade")) == 1 || int(getcvar("check_grenade")) == 2)
  		{
			for(local.i = 1; local.i <= $player.size; local.i++)
			{
				if(local.c == NIL) { local.c = 0 }
				if($player[local.i].dmteam == "spectator")
				{
					$player[local.i] tele level.spot_grenade[local.c]
	
					local.tempstr = "Grenade Ammo [" + local.c + "] = ( "
					local.tempstr = local.tempstr + string(int(level.spot_grenade[local.c][0])) + " " 
					local.tempstr = local.tempstr + string(int(level.spot_grenade[local.c][1])) + " "
					local.tempstr = local.tempstr + string(int(level.spot_grenade[local.c][2])) + " ) "
					$player[local.i] iprint local.tempstr
				}
			}
			wait 3
			if(local.c != NIL) 
			{
				local.c++
				if(local.c >= level.spot_grenade.size) { local.c = 0; wait 3 }
			}
			level.check_teleporting_spectators = 1
	 	}
	}
	if(level.check_teleporting_spectators == 1) { level.check_teleporting_spectators = 0 }

	if(int(getcvar("check_grenade")) != 0 && int(getcvar("check_grenade")) != 1 && int(getcvar("check_grenade")) != 2) { setcvar "check_grenade" "0" }
	if($player.size >= 1) { $player iprint ("----- Teleporting to Grenade Ammo origins DISABLED.") }
	println("----- Teleporting to Grenade Ammo origins DISABLED.")
  	thread grenade1

end

grenade2:

	while(int(getcvar("check_grenade")) != 2) { waitframe }

	if(level.spot_grenade == NIL || level.spot_grenade.size < 1)
	{
		println("----- There are no Grenade Ammo triggers in this map.")
		setcvar "check_grenade" "0"
		thread grenade2
		end
 	}

	if($grenade_testent_1 == NULL)
	{
		println("----- Spawning visible entities at the " + level.spot_grenade.size + " Grenade Ammo origins.")
		if($player.size >= 1) { $player iprint ("----- Spawning visible entities at the " + level.spot_grenade.size + " Grenade Ammo origins.") }

		for(local.e = 0; local.e <= level.spot_grenade.size - 1; local.e++)
		{
			local.ent = spawn script_model targetname ("grenade_testent_" + local.e)
			local.ent model "weapons/steilhandgranate.tik"
			local.ent.origin = level.spot_grenade[local.e] + ( 0 0 15 )
			local.ent.angles = ( 0 0 0 )
			local.ent scale 2.5
			local.ent light 1 0 0 100
			local.ent notsolid
		}
	}

	while(int(getcvar("check_grenade")) == 1 || int(getcvar("check_grenade")) == 2) { waitframe }

	for(local.e = 0; local.e <= level.spot_grenade.size - 1; local.e++) { $("grenade_testent_" + local.e) remove }

	if(int(getcvar("check_grenade")) != 0 && int(getcvar("check_grenade")) != 1 && int(getcvar("check_grenade")) != 2) { setcvar "check_grenade" "0" }
	println("----- Entities at Grenade Ammo origins REMOVED.")
	if($player.size >= 1) { $player iprint ("----- Entities at Grenade Ammo origins REMOVED.") }
  	thread grenade2
end

////////////////////////////////////////////////////////////////////////

rocket1:

	while(int(getcvar("check_rocket")) != 1) { waitframe }

	if(level.check_teleporting_spectators == 1 || level.spot_rocket == NIL || level.spot_rocket.size < 1)
	{
		if(level.spot_rocket == NIL || level.spot_rocket.size < 1) { println("----- There are no Rocket Ammo triggers in this map.") }
		if(level.check_teleporting_spectators == 1 && level.spot_rocket.size >= 1) { println("----- Spectators are already teleporting. Turn it off ['check 0'], then type 'check_rocket 1' again.") }
		setcvar "check_rocket" "0"
		thread rocket1
		end
 	}

	if(level.check_teleporting_spectators != 1)
	{
		println("----- Teleporting all spectators to the " + level.spot_rocket.size + " Rocket Ammo origins.")
		if($player.size >= 1) { $player iprint ("----- Teleporting all spectators to the " + level.spot_rocket.size + " Rocket Ammo origins.") }

  		while(int(getcvar("check_rocket")) == 1 || int(getcvar("check_rocket")) == 2)
  		{
			for(local.i = 1; local.i <= $player.size; local.i++)
			{
				if(local.c == NIL) { local.c = 0 }
				if($player[local.i].dmteam == "spectator")
				{
					$player[local.i] tele level.spot_rocket[local.c]
	
					local.tempstr = "Rocket Ammo [" + local.c + "] = ( "
					local.tempstr = local.tempstr + string(int(level.spot_rocket[local.c][0])) + " " 
					local.tempstr = local.tempstr + string(int(level.spot_rocket[local.c][1])) + " "
					local.tempstr = local.tempstr + string(int(level.spot_rocket[local.c][2])) + " ) "
					$player[local.i] iprint local.tempstr
				}
			}
			wait 3
			if(local.c != NIL) 
			{
				local.c++
				if(local.c >= level.spot_rocket.size) { local.c = 0; wait 3 }
			}
			level.check_teleporting_spectators = 1
	 	}
	}
	if(level.check_teleporting_spectators == 1) { level.check_teleporting_spectators = 0 }

	if(int(getcvar("check_rocket")) != 0 && int(getcvar("check_rocket")) != 1 && int(getcvar("check_rocket")) != 2) { setcvar "check_rocket" "0" }
	if($player.size >= 1) { $player iprint ("----- Teleporting to Rocket Ammo origins DISABLED.") }
	println("----- Teleporting to Rocket Ammo origins DISABLED.")
  	thread rocket1

end

rocket2:

	while(int(getcvar("check_rocket")) != 2) { waitframe }

	if(level.spot_rocket == NIL || level.spot_rocket.size < 1)
	{
		println("----- There are no Rocket Ammo triggers in this map.")
		setcvar "check_rocket" "0"
		thread rocket2
		end
 	}

	if($rocket_testent_1 == NULL)
	{
		println("----- Spawning visible entities at the " + level.spot_rocket.size + " Rocket Ammo origins.")
		if($player.size >= 1) { $player iprint ("----- Spawning visible entities at the " + level.spot_rocket.size + " Rocket Ammo origins.") }

		for(local.e = 0; local.e <= level.spot_rocket.size - 1; local.e++)
		{
			local.ent = spawn script_model targetname ("rocket_testent_" + local.e)
			local.ent model "weapons/bazooka.tik"
			local.ent.origin = level.spot_rocket[local.e] + ( 0 0 15 )
			local.ent.angles = ( 0 0 0 )
			local.ent scale 0.9
			local.ent light .5 0 1 100
			local.ent notsolid
		}
	}

	while(int(getcvar("check_rocket")) == 1 || int(getcvar("check_rocket")) == 2) { waitframe }

	for(local.e = 0; local.e <= level.spot_rocket.size - 1; local.e++) { $("rocket_testent_" + local.e) remove }

	if(int(getcvar("check_rocket")) != 0 && int(getcvar("check_rocket")) != 1 && int(getcvar("check_rocket")) != 2) { setcvar "check_rocket" "0" }
	println("----- Entities at Rocket Ammo origins REMOVED.")
	if($player.size >= 1) { $player iprint ("----- Entities at Rocket Ammo origins REMOVED.") }
  	thread rocket2
end

////////////////////////////////////////////////////////////////////////

snowball1:

	while(int(getcvar("check_snowball")) != 1) { waitframe }

	if(level.check_teleporting_spectators == 1 || level.spot_snowball == NIL || level.spot_snowball.size < 1)
	{
		if(level.spot_snowball == NIL || level.spot_snowball.size < 1) { println("----- There are no Snowball Ammo triggers in this map.") }
		if(level.check_teleporting_spectators == 1 && level.spot_snowball.size >= 1) { println("----- Spectators are already teleporting. Turn it off ['check 0'], then type 'check_snowball 1' again.") }
		setcvar "check_snowball" "0"
		thread snowball1
		end
 	}

	if(level.check_teleporting_spectators != 1)
	{
		println("----- Teleporting all spectators to the " + level.spot_snowball.size + " Snowball Ammo origins.")
		if($player.size >= 1) { $player iprint ("----- Teleporting all spectators to the " + level.spot_snowball.size + " Snowball Ammo origins.") }

  		while(int(getcvar("check_snowball")) == 1 || int(getcvar("check_snowball")) == 2)
  		{
			for(local.i = 1; local.i <= $player.size; local.i++)
			{
				if(local.c == NIL) { local.c = 0 }
				if($player[local.i].dmteam == "spectator")
				{
					$player[local.i] tele level.spot_snowball[local.c]
	
					local.tempstr = "Snowball Ammo [" + local.c + "] = ( "
					local.tempstr = local.tempstr + string(int(level.spot_snowball[local.c][0])) + " " 
					local.tempstr = local.tempstr + string(int(level.spot_snowball[local.c][1])) + " "
					local.tempstr = local.tempstr + string(int(level.spot_snowball[local.c][2])) + " ) "
					$player[local.i] iprint local.tempstr
				}
			}
			wait 3
			if(local.c != NIL) 
			{
				local.c++
				if(local.c >= level.spot_snowball.size) { local.c = 0; wait 3 }
			}
			level.check_teleporting_spectators = 1
	 	}
	}
	if(level.check_teleporting_spectators == 1) { level.check_teleporting_spectators = 0 }

	if(int(getcvar("check_snowball")) != 0 && int(getcvar("check_snowball")) != 1 && int(getcvar("check_snowball")) != 2) { setcvar "check_snowball" "0" }
	if($player.size >= 1) { $player iprint ("----- Teleporting to Snowball Ammo origins DISABLED.") }
	println("----- Teleporting to Snowball Ammo origins DISABLED.")
  	thread snowball1

end

snowball2:

	while(int(getcvar("check_snowball")) != 2) { waitframe }

	if(level.spot_snowball == NIL || level.spot_snowball.size < 1)
	{
		println("----- There are no Snowball Ammo triggers in this map.")
		setcvar "check_snowball" "0"
		thread snowball2
		end
 	}

	if($snowball_testent_1 == NULL)
	{
		println("----- Spawning visible entities at the " + level.spot_snowball.size + " Snowball Ammo origins.")
		if($player.size >= 1) { $player iprint ("----- Spawning visible entities at the " + level.spot_snowball.size + " Snowball Ammo origins.") }

		for(local.e = 0; local.e <= level.spot_snowball.size - 1; local.e++)
		{
			local.ent = spawn script_model targetname ("snowball_testent_" + local.e)
			local.ent model "weapons/silencedpistol.tik"
			local.ent.origin = level.spot_snowball[local.e] + ( 0 0 15 )
			local.ent.angles = ( 0 0 0 )
			local.ent scale 1.8
			local.ent light 1 1 0 100
			local.ent notsolid
		}
	}

	while(int(getcvar("check_snowball")) == 1 || int(getcvar("check_snowball")) == 2) { waitframe }

	for(local.e = 0; local.e <= level.spot_snowball.size - 1; local.e++) { $("snowball_testent_" + local.e) remove }

	if(int(getcvar("check_snowball")) != 0 && int(getcvar("check_snowball")) != 1 && int(getcvar("check_snowball")) != 2) { setcvar "check_snowball" "0" }
	println("----- Entities at Snowball Ammo origins REMOVED.")
	if($player.size >= 1) { $player iprint ("----- Entities at Snowball Ammo origins REMOVED.") }
  	thread snowball2
end

////////////////////////////////////////////////////////////////////////

finaldoorkey1:

	while(int(getcvar("check_finaldoorkey")) != 1) { waitframe }

	if(level.check_teleporting_spectators == 1 || level.finalkey_spot == NIL || level.finalkey_spot.size < 1)
	{
		if(level.finalkey_spot == NIL || level.finalkey_spot.size < 1) { println("----- There are no Final Door Key triggers in this map.") }
		if(level.check_teleporting_spectators == 1 && level.finalkey_spot.size >= 1) { println("----- Spectators are already teleporting. Turn it off ['check 0'], then type 'check_finaldoorkey 1' again.") }
		setcvar "check_finaldoorkey" "0"
		thread finaldoorkey1
		end
 	}

	if(level.check_teleporting_spectators != 1)
	{
		println("----- Teleporting all spectators to the " + level.finalkey_spot.size + " Final Door Key origins.")
		if($player.size >= 1) { $player iprint ("----- Teleporting all spectators to the " + level.finalkey_spot.size + " Final Door Key origins.") }

  		while(int(getcvar("check_finaldoorkey")) == 1 || int(getcvar("check_finaldoorkey")) == 2)
  		{
			for(local.i = 1; local.i <= $player.size; local.i++)
			{
				if(local.c == NIL) { local.c = 0 }
				if($player[local.i].dmteam == "spectator")
				{
					$player[local.i] tele level.finalkey_spot[local.c]
	
					local.tempstr = "Final Door Key [" + local.c + "] = ( "
					local.tempstr = local.tempstr + string(int(level.finalkey_spot[local.c][0])) + " " 
					local.tempstr = local.tempstr + string(int(level.finalkey_spot[local.c][1])) + " "
					local.tempstr = local.tempstr + string(int(level.finalkey_spot[local.c][2])) + " ) "
					$player[local.i] iprint local.tempstr
				}
			}
			wait 3
			if(local.c != NIL) 
			{
				local.c++
				if(local.c >= level.finalkey_spot.size) { local.c = 0; wait 3 }
			}
			level.check_teleporting_spectators = 1
	 	}
	}
	if(level.check_teleporting_spectators == 1) { level.check_teleporting_spectators = 0 }

	if(int(getcvar("check_finaldoorkey")) != 0 && int(getcvar("check_finaldoorkey")) != 1 && int(getcvar("check_finaldoorkey")) != 2) { setcvar "check_finaldoorkey" "0" }
	if($player.size >= 1) { $player iprint ("----- Teleporting to Final Door Key origins DISABLED.") }
	println("----- Teleporting to Final Door Key origins DISABLED.")
  	thread finaldoorkey1

end

finaldoorkey2:

	while(int(getcvar("check_finaldoorkey")) != 2) { waitframe }

	if(level.finalkey_spot == NIL || level.finalkey_spot.size < 1)
	{
		println("----- There are no Final Door Key triggers in this map.")
		setcvar "check_finaldoorkey" "0"
		thread finaldoorkey2
		end
 	}

	if($finaldoorkey_testent_1 == NULL)
	{
		println("----- Spawning visible entities at the " + level.finalkey_spot.size + " Final Door Key origins.")
		if($player.size >= 1) { $player iprint ("----- Spawning visible entities at the " + level.finalkey_spot.size + " Final Door Key origins.") }

		for(local.e = 0; local.e <= level.finalkey_spot.size - 1; local.e++)
		{
			local.ent = spawn script_model targetname ("finaldoorkey_testent_" + local.e)
			local.ent model "items/camera.tik"
			local.ent.origin = level.finalkey_spot[local.e] + ( 0 0 15 )
			local.ent.angles = ( 0 0 0 )
			local.ent scale 2.5
			local.ent light 0 1 0 100
			local.ent notsolid
		}
	}

	while(int(getcvar("check_finaldoorkey")) == 1 || int(getcvar("check_finaldoorkey")) == 2) { waitframe }

	for(local.e = 0; local.e <= level.finalkey_spot.size - 1; local.e++) { $("finaldoorkey_testent_" + local.e) remove }

	if(int(getcvar("check_finaldoorkey")) != 0 && int(getcvar("check_finaldoorkey")) != 1 && int(getcvar("check_finaldoorkey")) != 2) { setcvar "check_finaldoorkey" "0" }
	println("----- Entities at Final Door Key origins REMOVED.")
	if($player.size >= 1) { $player iprint ("----- Entities at Final Door Key origins REMOVED.") }
  	thread finaldoorkey2
end
