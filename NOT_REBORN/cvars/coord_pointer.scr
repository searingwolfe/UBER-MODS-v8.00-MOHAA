// A simple laser pointer for iprinting & console-printing "origin + angle" of the pointed target, in integer form.
// "origin + angle" are also saved to a "cvars/coords.txt" file.
// Double-click in the same exact spot to print "origin + angle" in 3 decimal places.
//
// NOTE: You may need to be noclipping or in spectator for double-clicking to work, since player is alive and always breathing.
//
// Type "coord_pointer [player number or player name]" into console to give/take a coord pointer.
// i.e. "coord_pointer 1". Giving $player[1] a coord_pointer.
//
// Run "exec cvars/coord_pointer.scr" in any map script.

main:

	cache models/emitters/lanternflame.tik
	thread coord_pointer
end

coord_pointer:

	while(getcvar("coord_pointer") == "0" || getcvar("coord_pointer") == "") { waitframe }

	local.cvar = getcvar("coord_pointer")
	if(int(local.cvar) < 0) { local.cvar = local.cvar * -1 }
	if(int(local.cvar) == 0 && local.cvar != "0") { println("----- ERROR. Typing player names in CVARs only works in MOHAA Reborn 1.12.") }

	for(local.i = 1; local.i <= $player.size; local.i++)
	{
		if($player[local.i] != NULL && int(local.cvar) == local.i)
		{
			if($player[local.i].coord_pointer_given != 1)
			{
				$player[local.i] iprint ("----- You've acquired the coord pointer.")
				$player[local.i] iprint ("----- Hold USE(e) to aim at a spot. Press FIRE to iprint coords + angle.")
				println("----- Giving $player[" + local.i + "] a coord pointer.")

				$player[local.i] thread give_player_pointer
			}
			else
			{
				$player[local.i] iprint ("----- Your coord pointer has been taken away.")
				println("----- Taking $player[" + local.i + "]'s coord pointer.")
				$player[local.i].coord_pointer_given = 0			
			}
			local.on = 1
		}
	}
	if(local.on != 1)
	{
		if(int(local.cvar) > 0) { println("----- ERROR. $player[" + int(local.cvar) + "] does not exist!") }
	}

	if(getcvar("coord_pointer") != "0") { setcvar "coord_pointer" "0" }
	thread coord_pointer
end

give_player_pointer:

	self.coord_pointer_given = 1

	local.pointer = spawn script_model
	local.pointer model emitters/lanternflame.tik
	local.pointer.origin = self.origin
	local.pointer.angle = self.angle
	local.pointer.scale = 1
	local.pointer notsolid
	local.pointer anim stop

	local.laser = thread spawnlaser self.origin self.origin ( 0 1 0 ) 0.1
	local.laser2 = thread spawnlaser self.origin self.origin ( 1 0 0 ) 0.25
	local.laser3 = thread spawnlaser self.origin self.origin ( 0 0 1 ) 0.25

	while(self != NULL && self.coord_pointer_given == 1)
	{
		if(self.useheld == 1)
		{
			local.pointing_target = (trace (self gettagposition "eyes bone") (self gettagposition "eyes bone" + (angles_toforward self.viewangles) * 10248) 0)
			local.pointer anim start
			local.laser2 activate
			local.laser3 activate

			if(self.coord_pointer_aimed != 1 || local.angles == NIL) { local.angles = ( 0 self.angle 0 ) }
			self.coord_pointer_aimed = 1

			if(self.fireheld == 1 && self.coord_pointer_printed != 1)
			{
				if(local.origin_old == local.pointer.origin)
				{
					local.string = ("( " + local.pointer.origin[0] + " " + local.pointer.origin[1] + " " + local.pointer.origin[2] + " ) " + local.angles[1])
				}
				else
				{
					local.string = ("( " + int(local.pointer.origin[0]) + " " + int(local.pointer.origin[1]) + " " + int(local.pointer.origin[2]) + " ) " + int(local.angles[1]))
				}

				if((self getcontrollerangles 0)[2] > 15 || (self getcontrollerangles 0)[2] < -15)
				{
					self tele local.pointing_target
					self iprint ("Teleporting to: " + local.string)
				}
				else
				{
					self iprint local.string
					println(local.string)
				}

				self.coord_pointer_printed = 1
				local.origin_old = local.pointer.origin
			}
			if(self.fireheld != 1 && self.coord_pointer_printed == 1) { self.coord_pointer_printed = 0 }

			local.dist = vector_length(self.origin - local.pointer.origin)
			local.laser2 endpoint (trace (local.laser2.origin) (local.laser2.origin + (angles_toforward local.angles) * 0.100 * local.dist) 0)
			local.laser3 endpoint (local.laser3.origin + ( 0 0 (0.100 * local.dist) ))
		}
		else
		{
			self.coord_pointer_aimed = 0
			local.pointing_target = self gettagposition "eyes bone"
			local.pointer anim stop

			local.laser2 deactivate
			local.laser3 deactivate
			local.laser2 endpoint local.pointing_target
			local.laser3 endpoint local.pointing_target
		}

		local.laser.origin = self gettagposition "eyes bone"
		local.laser endpoint local.pointing_target
		local.pointer.origin = local.pointing_target
		local.laser2.origin = local.pointing_target
		local.laser3.origin = local.pointing_target
		waitframe
	}

	if(self != NULL)
	{
		self.coord_pointer_aimed = 0
		self.coord_pointer_printed = 0
		self.coord_pointer_given = 0
	}
	local.laser remove
	local.pointer remove
	local.laser2 remove
	local.laser3 remove
end

spawnlaser local.origin local.endpoint local.color local.scale:

	local.laser = spawn func_beam
	local.laser minoffset 0.0
	local.laser maxoffset 0.0
	local.laser numsegments 1
	local.laser life 0
	local.laser color local.color
	local.laser alpha 0.4
	local.laser alwaysdraw
	local.laser activate	
	if(local.scale == NIL || local.scale <= 0) { local.laser scale 1 }	
	else { local.laser scale local.scale }
	local.laser notsolid
	local.laser.origin = local.origin
	local.laser endpoint local.endpoint
end local.laser