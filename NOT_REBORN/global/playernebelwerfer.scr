main local.turret local.health local.resettime local.origin local.angles: 

////////////////////////////////////////////////////////////////////////

level.nebelwerfers_gravity = 1.1 	// 0
level.nebelwerfers_velocity = 2500	// 4000   for Spearhead-version projectiles

////////////////////////////////////////////////////////////////////////

	if(local.health == NIL || local.health < 0) { local.health = 999999 } // ideal health = 350
	if(local.resettime == NIL || local.resettime < 0) { local.resettime = 999999 }

 	if(local.turret != NIL && local.turret != NULL) { local.nebelwerfer = $(local.turret) }
	if(local.turret == NIL || local.turret == NULL)
	{
		if(level.nebelscriptmaster != 1) { cache models/statweapons/nebelwerfer.tik }
		local.nebelwerfer = spawn statweapons//nebelwerfer.tik
		local.nebelwerfer.targetname = ("playernebelwerfer_" + local.nebelwerfer.entnum)
		local.nebelwerfer.origin = local.origin
		//local.nebelwerfer.angles = local.angles // does not work for VehicleTurretGun classes

		local.fwd_vec = angles_toforward local.angles
		local.init_angles = spawn script_origin		// need this entity to initially point the turret towards local.angles
		local.init_angles.origin = trace (local.origin + local.fwd_vec * 56) (local.origin + local.fwd_vec * 10240) 0
		local.nebelwerfer setaimtarget local.init_angles
	}
	local.trig = spawn trigger_multiple spawnflags 128 targetname "nebelwerfer_healthtrig"
	local.trig.health = local.health // need this, otherwise trig = NULL
	local.trig.origin = local.nebelwerfer.origin
	local.trig setsize ( -42.5 -42.5 -1 ) ( 42.5 42.5 135 )
	local.trig setthread ImDead

	local.nebelwerfer setplayerusable 0
	local.nebelwerfer.damagemodel = "models/statweapons/nebelwerfer_d.tik"
	local.nebelwerfer pitchCaps ( -60 25 0 )
	local.nebelwerfer.trigshot = local.trig
	local.nebelwerfer.init_angles = local.init_angles
	local.nebelwerfer thread ResetNebel

	local.trig.nebelwerfer = local.nebelwerfer
	local.trig.health_init = local.health
	local.trig.resettime_init = local.resettime

	if(level.nebelscriptmaster != 1) // this only runs once
	{
		cache models/statweapons/nebelwerfer_d.tik
		cache models/projectiles/panzerschreckshell.tik
		cache models/emitters/mortar_dirt_nosound.tik
		cache models/emitters/mortar_higgins.tik //models/fx/fx_flak88_explosion.tik
		cache models/fx/explosionPANZERIVshell.tik
		cache models/fx/fx_cannonsmoke.tik
		thread scriptmaster
		level.nebelscriptmaster = 1
	}

	if(level.chainreactors == NIL || (level.chainreactors != NIL && level.chainreactors.size < 1)) { level.chainreactors[1] = local.trig }
	else
	{
		for(local.c = 1; local.c <= 999; local.c++)
		{
			if(level.chainreactors[local.c] == NIL)
			{
				level.chainreactors[local.c] = local.trig
				local.trig thread chainreactors_remove local.c
				break
			}
		}
	}
end

chainreactors_remove local.c:

	while(self != NULL && self.dead != 1) { waitframe }
	level.chainreactors[local.c] = NIL
end

////////////////////////////////////////////////////////////////////////

ResetNebel:

	local.trig = spawn trigger_use
	local.trig.origin = self.origin
	local.trig setsize ( -42.5 -42.5 -1 ) ( 42.5 42.5 115 )
	local.trig.nebelwerfer = self
	local.trig setthread playergetin_nebel

	self.trigenter = local.trig
	self.corona = 0
	self thread healthboost // allows visible players using the nebelwerfer to be shot & killed
	removeclass Camera // also removes PlayerIntermission and other func_cameras
end

////////////////////////////////////////////////////////////////////////

healthboost: // shotgun: 340 damage, bazooka: 105 damage, sniper: 106 damage, one grenade: 200 damage, two grenades: 400 damage

	local.health = self.trigshot.health
	while(self != NULL && self.dead != 1 && self.trigshot != NULL && self.trigshot.health > 0)
	{
		if(self.wplayer != NIL && self.wplayer != NULL && self.wplayer.health > 0)
		{
			if(self.trigshot.health < local.health)
			{
				local.damage = ((local.health - self.trigshot.health) / 3.000)

				if(self.trigshot.shooter != NIL && self.trigshot.shooter != NULL)
				{
					if(self.trigshot.shooter.player_owner != NIL && self.trigshot.shooter.player_owner != NULL) { self.wplayer damage self.trigshot.shooter.player_owner local.damage self.trigshot.shooter.player_owner (0 0 0) (0 0 0) (0 0 0) 0 9 0 0 }
					else if(self.trigshot.shooter.owner != NIL && self.trigshot.shooter.owner != NULL) { self.wplayer damage self.trigshot.shooter.owner local.damage self.trigshot.shooter.owner (0 0 0) (0 0 0) (0 0 0) 0 9 0 0 }
					else { self.wplayer damage self.trigshot.shooter local.damage self.trigshot.shooter (0 0 0) (0 0 0) (0 0 0) 0 9 0 0 }
				}
			}

			for(local.i = 1; local.i <= $player.size; local.i++)
			{
				if($player[local.i].isdog == 1 && $("dogmouthtrig_" + $player[local.i].entnum).biting == 1 && $("dogmouthtrig_" + $player[local.i].entnum) istouching self.trigshot)
				{
					self.wplayer damage $player[local.i] 15000 $player[local.i] (0 0 0) (0 0 0) (0 0 0) 0 9 0 0
				}
			}
		}
		if(isalive self.trigshot) { self.trigshot.health = local.health } // need "isalive" check to avoid "cannot give health to dead entities" error
		if(self.trigshot.shooter != NIL) { self.trigshot thread shooter_NIL }
		waitframe
	}
end

shooter_NIL:

	waitframe
	if(self != NULL) { self.shooter = NIL }
end

////////////////////////////////////////////////////////////////////////

playergetin_nebel:

	local.player = parm.other
	if(local.player.driving == 1 || local.player.passenger == 1 || local.player.flying == 1) { self triggerable; end }
	if(local.player.isdog == 1)
	{
		local.player iprint ("Dogs cannot use nebelwerfers.") // set other exceptions here
		self triggerable
		end
	}
	if(!isalive local.player || local.player.dead == 1 || level.change_team_score == 1 || level.bbactive == 0) { end }

	self nottriggerable
	self.nebelwerfer.wplayer = parm.other
	local.team = self.nebelwerfer.wplayer.dmteam

	if(self.nebelwerfer.init_angles != NIL && self.nebelwerfer.init_angles != NULL) { self.nebelwerfer.init_angles remove }
	self.nebelwerfer dmprojectile models/projectiles/panzerschreckshell.tik // doesn't work, so a "projectile" thread is used instead

	self.nebelwerfer.wplayer.driving_state_jump = 0
	self.nebelwerfer.wplayer forcetorsostate FN_START
	self.nebelwerfer.wplayer forcelegsstate STAND
	//self.nebelwerfer.wplayer hide
	//self.nebelwerfer.wplayer notsolid
	//self.nebelwerfer.wplayer nodamage
	//self.nebelwerfer.wplayer safeholster 1 // must "wait 1" for safeholster to work, crosshair also gets removed
	self.nebelwerfer.wplayer.driving = 1
	self.nebelwerfer.wplayer.drivingent = self.nebelwerfer.trigshot
	//wait 1
	self.corona = 1
	self.nebelwerfer.wplayer iprint ("JUMP = exit. USE(e) = reload. Hold USE(e) = look around.")
	if(self.nebelwerfer.nebelfirecount == NIL) { self.nebelwerfer.nebelfirecount = 0 }

	self.nebelwerfer.player_owner = self.nebelwerfer.wplayer

	local.groundtarget = spawn script_origin
	self.nebelwerfer setaimtarget local.groundtarget
	local.holdtime = 0
	local.nebelangles = 0
	local.lookangles = 0

	while(self != NULL && self.nebelwerfer != NULL && self.nebelwerfer.dead != 1 && self.nebelwerfer.wplayer != NIL && self.nebelwerfer.wplayer != NULL && isalive self.nebelwerfer.wplayer && self.nebelwerfer.wplayer.dmteam == local.team && self.nebelwerfer.wplayer.health > 0 && self.nebelwerfer.wplayer.dead != 1 && level.change_team_score != 1 && level.bbactive != 0)
	{
		self.nebelwerfer.wplayer.origin = self.nebelwerfer.origin  + ( -10 0 20 )
		local.fwd_vec = angles_toforward self.nebelwerfer.wplayer.viewangles
		local.start = self.nebelwerfer.wplayer gettagposition "Bip01 Head"
		local.range = 10240
		if(self.nebelwerfer.wplayer.viewangles != local.lookangles && self.nebelwerfer.wplayer.useheld != 1) // if holding USE(e), player can look around without moving turret.
		{
			local.groundtarget.origin = trace (local.start + local.fwd_vec * 56) (local.start + local.fwd_vec * local.range) 0
			self.nebelwerfer.wplayer loopsound flak_snd_move
		}
		if(self.nebelwerfer.angles == local.nebelangles) { self.nebelwerfer.wplayer stoploopsound }
		local.nebelangles = self.nebelwerfer.angles
		local.lookangles = self.nebelwerfer.wplayer.viewangles

		if(self.nebelwerfer.wplayer.fireheld == 1 && self.nebelwerfer.wplayer.useheld != 1 && self.nebelwerfer.nebelfiredelay != 0 && self.nebelwerfer.autoreloading != 1)
		{
			self.nebelwerfer thread reload_nebel
			self.nebelwerfer thread projectile
			self.nebelwerfer waitthread fire_nebel
		}
		if(self.nebelwerfer.wplayer.useheld == 1) { self.nebelwerfer thread reload_nebel_auto } // Right-click to reload the nebelwerfer.

		if(self != NULL && self.nebelwerfer != NULL && self.nebelwerfer.dead != 1 && self.nebelwerfer.wplayer != NIL && self.nebelwerfer.wplayer != NULL && isalive self.nebelwerfer.wplayer &&self.nebelwerfer.wplayer.driving_state_jump == 1) // Press JUMP to exit.
		{
			self.nebelwerfer.wplayer.origin = self.nebelwerfer.origin + ( 0 0 85 )
			self.nebelwerfer.wplayer.viewangles = ( self.nebelwerfer.angles[0] self.nebelwerfer.angles[1] 0 )
			self.nebelwerfer.wplayer show
			self.nebelwerfer.wplayer solid
			self.nebelwerfer.wplayer takedamage
			//self.nebelwerfer.wplayer safeholster 0
			self.nebelwerfer.wplayer stoploopsound
			self.nebelwerfer.wplayer.driving = 0
			self.nebelwerfer.wplayer.drivingent = NIL
			self.nebelwerfer.wplayer forcetorsostate STAND
			self.nebelwerfer.wplayer = NIL
			self.nebelwerfer thread ResetNebel
			self.nebelwerfer thread reload_nebel_auto
			local.groundtarget remove
			self remove
			end
		}
		waitframe
	}

	if(local.player != NULL) { local.player.driving = 0; local.player.drivingent = NIL }
	if(self == NULL && local.player != NIL && local.player != NULL)
	{
		local.player takedamage
		if(local.player.dmteam == spectator)
		{
			local.player.origin = local.player.origin + ( 0 0 85 )
			local.player.viewangles = ( local.player.angles[0] local.player.angles[1] 0 )
		}
		if(local.player.dmteam != spectator)
		{
			local.player show
			local.player solid
			killent local.player.entnum
		}
	}
	if(self != NULL)
	{
		if(self.nebelwerfer != NULL && self.nebelwerfer.dead != 1 && self.nebelwerfer.wplayer != NIL && self.nebelwerfer.wplayer != NULL && (self.nebelwerfer.wplayer.dmteam != local.team || level.change_team_score == 1 || level.bbactive == 0))
		{
			if(self.nebelwerfer.wplayer.dmteam == spectator)
			{
				self.nebelwerfer.wplayer.origin = self.nebelwerfer.origin + ( 0 0 85 )
				self.nebelwerfer.wplayer.viewangles = ( self.nebelwerfer.angles[0] self.nebelwerfer.angles[1] 0 )
			}
			if(self.nebelwerfer.wplayer.dmteam != spectator) { self.nebelwerfer.wplayer solid; self.nebelwerfer.wplayer show }
			self.nebelwerfer.wplayer takedamage
			self.nebelwerfer.wplayer stoploopsound
			self.nebelwerfer.wplayer forcetorsostate STAND
			self.nebelwerfer.wplayer = NIL
			self.nebelwerfer thread ResetNebel
			self.nebelwerfer thread reload_nebel_auto
			local.groundtarget remove
			self remove
			end
		}
		if(self.nebelwerfer != NULL && self.nebelwerfer.dead != 1 && (self.nebelwerfer.wplayer == NIL || self.nebelwerfer.wplayer == NULL))
		{
			self.nebelwerfer.wplayer = NIL
			self.nebelwerfer thread ResetNebel
			self.nebelwerfer thread reload_nebel_auto
			local.groundtarget remove
			self remove
			end
		}
		if(self.nebelwerfer.wplayer != NIL && self.nebelwerfer.wplayer != NULL && (self.nebelwerfer == NULL || self.nebelwerfer.dead == 1 || !isalive self.nebelwerfer.wplayer))
		{
			self.nebelwerfer.wplayer.origin = self.nebelwerfer.wplayer.origin + ( 0 0 85 )
			self.nebelwerfer.wplayer show
			self.nebelwerfer.wplayer solid
			self.nebelwerfer.wplayer takedamage
		
			if(isalive self.nebelwerfer.wplayer)
			{
				if(self.nebelwerfer.trigshot.killer != NIL && self.nebelwerfer.trigshot.killer != NULL)
				{
					if(self.nebelwerfer.trigshot.killer.player_owner != NIL && self.nebelwerfer.trigshot.killer.player_owner != NULL) { self.nebelwerfer.wplayer damage self.nebelwerfer.trigshot.killer.player_owner local.damage self.nebelwerfer.trigshot.killer.player_owner (0 0 0) (0 0 0) (0 0 0) 0 9 0 0 }
					else if(self.nebelwerfer.trigshot.killer.owner != NIL && self.nebelwerfer.trigshot.killer.owner != NULL) { self.nebelwerfer.wplayer damage self.nebelwerfer.trigshot.killer.owner local.damage self.nebelwerfer.trigshot.killer.owner (0 0 0) (0 0 0) (0 0 0) 0 9 0 0 }
					else { self.nebelwerfer.wplayer damage self.nebelwerfer.trigshot.killer 9999999 self.nebelwerfer.trigshot.killer (0 0 0) (0 0 0) (0 0 0) 0 9 0 0 }
				}
				else { killent self.nebelwerfer.wplayer.entnum }
			}

			self.nebelwerfer.wplayer stoploopsound
			self.nebelwerfer.wplayer forcetorsostate STAND
			self.nebelwerfer.wplayer = NIL
			if(self.nebelwerfer.dead != 1)
			{
				self.nebelwerfer thread ResetNebel
				self.nebelwerfer thread reload_nebel_auto
				local.groundtarget remove
			}
		}
		self remove
	}
end

////////////////////////////////////////////////////////////////////////

reload_nebel:

	self.nebelsmokecount = 0
	if(self.nebelsmoking != 1) { self thread smokey }

	if(self.nebelfirecount == NIL) { self.nebelfirecount = 0 }
	self.nebelfirecount++

	if(self.nebelfirecount >= 6)
	{
		self.nebelfiredelay = 0

		for(local.c = 0; local.c < 6; local.c++)
		{
			if(self.dead == 1) { break }
			self playsound snd_bazooka_pullout
			wait 1
		}
		if(self != NULL) { self.nebelfiredelay = 1; self.nebelfirecount = 0 }
	}
end

reload_nebel_auto:

	if(self.autoreloading == 1) { end }
	self.autoreloading = 1

	if(self.nebelfirecount < 6)
	{
		self.nebelfiredelay = 0

		for(local.c = 0; local.c < self.nebelfirecount; local.c++)
		{
			if(self.dead == 1) { break }
			self playsound snd_bazooka_pullout
			wait 1
		}
		if(self != NULL) { self.nebelfiredelay = 1; self.nebelfirecount = 0 }
	}
	self.autoreloading = 0
end

////////////////////////////////////////////////////////////////////////

fire_nebel:

	self playsound nebelwerfer_launch
	for(local.c = 0; local.c < 15; local.c++) // wait .75
	{
		if(self == NULL || self.dead == 1) { break }
		wait .05
	}
end

projectile:

	local.player = self.wplayer // used for the for-loop later
	local.fwd_vec = angles_toforward self.angles // fwd_vec[2] = 0 when player looks horizontal, -.999 looking down, .999 looking up
	local.horizontaldist = local.fwd_vec[2] * 75
	local.verticalboost = local.fwd_vec[2] * 40
	if(local.fwd_vec[2] < 0) { local.horizontaldist = local.fwd_vec[2] * -1 } // horizontaldist = .999 looking down, .999 looking up

	local.sin = (waitthread global/math.scr::sine self.angles[1]) * (50 - local.horizontaldist)		// total distance multiplier = 0 if looking vertically up or down
	local.cos = (waitthread global/math.scr::cosine self.angles[1]) * (50 - local.horizontaldist)		// if horizontaldist > 50 (i.e. 75), sin and cos will be negative, allowing rockets to spawn <= 25 units behind player

	local.rocket = spawn script_model
	local.rocket model "projectiles/panzerschreckshell.tik"
	local.rocket.origin = self.origin + ( local.cos local.sin (60 + local.verticalboost) ) // place rockets' origins inside the nebelwerfer's cannons
	local.rocket.angles = ( (self.angles[0] * -1) (self.angles[1] + 180) self.angles[2] )
	//local.rocket light 0 1 0 200
	local.rocket.scale = 2
	local.rocket solid
	local.rocket physics_on    // need this for gravity and waittill touch to work.
	local.rocket thread rotate

	local.rocket gravity level.nebelwerfers_gravity
	local.rocket.velocity = (angles_toforward self.angles) * level.nebelwerfers_velocity

	local.hitthing = self
	while(local.hitthing == self || local.hitthing == self.wplayer)
	{
		local.rocket waittill touch
		local.hitthing = parm.other
	}

	local.rocket.velocity = ( 0 0 0 )
	local.explode = spawn "fx/explosionPANZERIVshell.tik"
	local.explode.origin = local.rocket.origin
	local.explode.scale = 2.5
	//local.explode light 1 0 0 500
	local.explode anim idle
	//local.explode playsound bazooka_exp // already included in explosionPANZERIVshell

	if(self != NULL) { local.rocket.player_owner = self.wplayer }

	local.blewup = 1
	for(local.i = 1; local.i <= $player.size; local.i++) // use this instead of radiusdamage, so rockets can count as score/kills
	{
		if(vector_length(local.explode.origin - $player[local.i].origin) <= 200) // "local.explode" emitters cannot be used with "cansee"
		{
			if(local.player == NIL || local.player == NULL)
			{
				if($player[local.i].driving != 1 && $player[local.i].flying != 1 && $player[local.i] cansee local.rocket 360)
				{
					$player[local.i] damage $world 250 $world (0 0 0) (0 0 0) (0 0 0) 0 9 9 0
				}
				else if($player[local.i].drivingent != NIL && $player[local.i].drivingent != NULL)
				{
					if($player[local.i].flying == 1) { $("planehit" + $player[local.i].entnum) damage $world 250 $world (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
					else { $player[local.i].drivingent damage $world 250 $world (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
				}
			}
			else if($player[local.i] != local.player && $player[local.i].dmteam == local.player.dmteam && getcvar("g_teamdamage") != "1" && getcvar("g_gametype") != "1") { local.blewup = 0 }
			else
			{
				if($player[local.i].driving != 1 && $player[local.i].flying != 1 && $player[local.i] cansee local.rocket 360)
				{
					$player[local.i] damage local.player 250 local.player (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 // "damage" does not hurt teammates, but scriptbazookaexplosion.tik does
				}
				else if($player[local.i].drivingent != NIL && $player[local.i].drivingent != NULL)
				{
					$player[local.i].drivingent.shooter = local.player
					if($player[local.i].flying == 1) { $("planehit" + $player[local.i].entnum) damage local.player 250 local.player (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
					else { $player[local.i].drivingent damage local.player 250 local.player (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
				}
			}
		}
		if(self != NULL && vector_length(local.explode.origin - self.trigshot.origin) < 200) // suicide, if the rockets blow up too close
		{
			self.trigshot.shooter = self.wplayer
			if(self.wplayer != NIL && self.wplayer != NULL) { self.trigshot damage self.wplayer self.trigshot.health self.wplayer (0 0 0) (0 0 0) (0 0 0) 0 1 15 -1 }
			if(self.wplayer == NIL || self.wplayer == NULL) { self.trigshot damage $world self.trigshot.health $world (0 0 0) (0 0 0) (0 0 0) 0 1 15 -1 }
			local.blewup = 0 // radiusdamage already included in "ImDead" thread.
		}
	}
	local.rocket remove
	if(local.blewup == 1) { radiusdamage local.explode.origin 250 200 } // 110 200
	waitframe
	local.explode remove
end

////////////////////////////////////////////////////////////////////////

rotate:

	while(self != NULL)
	{
		self.angles = (self.angles + ( -1 0 0 ))
		waitframe
	}
end

smokey:

	self.nebelsmoking = 1
	local.fwd_vec = angles_toforward self.angles // nebelwerfer skel model has no tag_ positions
	local.horizontaldist = local.fwd_vec[2] * 75 // simulate tag_barrel with sine & cosine position adjustments
	local.verticalboost = local.fwd_vec[2] * 40
	if(local.fwd_vec[2] < 0) { local.horizontaldist = local.fwd_vec[2] * -1 }

	local.sin = (waitthread global/math.scr::sine self.angles[1]) * (50 - local.horizontaldist)
	local.cos = (waitthread global/math.scr::cosine self.angles[1]) * (50 - local.horizontaldist)

	local.smoke = spawn script_model
	local.smoke model "fx/fx_cannonsmoke.tik"
	local.smoke.origin = self.origin + ( local.cos local.sin (60 + local.verticalboost) )

	while(self != NULL && self.dead != 1 && self.nebelsmokecount < 120)
	{
		local.fwd_vec = angles_toforward self.angles
		local.horizontaldist = local.fwd_vec[2] * 75
		local.verticalboost = local.fwd_vec[2] * 40
		if(local.fwd_vec[2] < 0) { local.horizontaldist = local.fwd_vec[2] * -1 }

		local.sin = (waitthread global/math.scr::sine self.angles[1]) * (50 - local.horizontaldist)
		local.cos = (waitthread global/math.scr::cosine self.angles[1]) * (50 - local.horizontaldist)

		local.smoke.origin = self.origin + ( local.cos local.sin (60 + local.verticalboost) )
		self.nebelsmokecount++
		waitframe
	}
	local.smoke remove
	if(self != NULL) { self.nebelsmoking = 0; self.nebelsmokecount = 0 }
end

////////////////////////////////////////////////////////////////////////

ImDead:

	self nottriggerable
	self.nebelwerfer.trigenter nottriggerable
	self.killer = parm.other
	self.nebelwerfer stoploopsound
	self.nebelwerfer stopsound

	local.turret = self.nebelwerfer
	local.model = self.nebelwerfer.model
	local.health = self.health_init
	local.resettime = self.resettime_init
	local.origin = self.nebelwerfer.origin
	local.angles = ( 0 self.nebelwerfer.angles[1] 0 )

	local.explode = spawn script_model
	local.explode model "models/emitters/mortar_higgins.tik" // fx/fx_flak88_explosion.tik
	local.explode.origin = self.origin //+ ( 0 0 30 )
	local.explode.angles = ( 0 -90 0 ) + ( 260 0 0 )
	local.explode.scale = 1.0 //1.3
	local.explode anim start
	local.explode notsolid
	
	local.debris = spawn script_model targetname "mortar_dirt_nosound"
	local.debris model "emitters/mortar_dirt_nosound.tik" 
	local.debris.origin = self.origin
	local.debris notsolid
	local.debris.scale = .8
	local.debris anim start

	if(self.nebelwerfer.wplayer != NIL)
	{
		if(self.killer != NIL)
		{
			if(self.killer.player_owner != NIL && self.killer.player_owner != NULL) { self.nebelwerfer.wplayer damage self.killer.player_owner 9999999 self.killer.player_owner (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }	
			else if(self.killer.owner != NIL && self.killer.owner != NULL) { self.nebelwerfer.wplayer damage self.killer.owner 9999999 self.killer.owner (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
			else if(self.killer != NULL) { self.nebelwerfer.wplayer damage self.killer 9999999 self.killer (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
		}
		else { self.nebelwerfer.wplayer volumedamage 9999999 } // let's make sure the driver is dead.
	}
	local.explode playsound explode_flak88
	exec global/earthquake.scr .35 2 0 0

	if(self.shooter != NIL && self.shooter != NULL)
	{
		if(self.shooter.player_owner != NIL && self.shooter.player_owner != NULL) { local.shooter = self.shooter.player_owner }
		else if(self.shooter.owner != NIL && self.shooter.owner != NULL) { local.shooter = self.shooter.owner }
		else { local.shooter = self.shooter }
	}
	local.blewup = 1
	for(local.i = 1; local.i <= $player.size; local.i++) // use this instead of radiusdamage, so death explosions can count as score/kills.
	{
		if(vector_length((self.origin + ( 0 0 75 )) - $player[local.i].origin) <= 600) // "local.explode" emitters cannot be used with "cansee"
		{
			if(local.shooter == NIL || local.shooter == NULL)
			{
				if($player[local.i].driving != 1 && $player[local.i].flying != 1 && $player[local.i] cansee self 360)
				{
					$player[local.i] damage $world 500 $world (0 0 0) (0 0 0) (0 0 0) 0 9 9 0
				}
				else if($player[local.i].drivingent != NIL && $player[local.i].drivingent != NULL)
				{
					if($player[local.i].flying == 1) { $("planehit" + $player[local.i].entnum) damage $world 500 $world (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
					else { $player[local.i].drivingent damage $world 500 $world (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
				}
			}
			else if($player[local.i] != local.shooter && $player[local.i].dmteam == local.shooter.dmteam && getcvar("g_teamdamage") != "1" && getcvar("g_gametype") != "1") { local.blewup = 0 }
			else
			{
				if($player[local.i].driving != 1 && $player[local.i].flying != 1 && $player[local.i] cansee self 360)
				{
					$player[local.i] damage local.shooter 500 local.shooter (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 // "damage" does not hurt teammates, but scriptbazookaexplosion.tik does
				}
				else if($player[local.i].drivingent != NIL && $player[local.i].drivingent != NULL)
				{
					$player[local.i].drivingent.shooter = local.shooter
					if($player[local.i].flying == 1) { $("planehit" + $player[local.i].entnum) damage local.shooter 500 local.shooter (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
					else { $player[local.i].drivingent damage local.shooter 500 local.shooter (0 0 0) (0 0 0) (0 0 0) 0 9 9 0 }
				}
			}
		}
	}

	self.nebelwerfer.dead = 1
	self.nebelwerfer.model = self.nebelwerfer.damagemodel
	waitframe
	local.explode remove
	local.debris remove
	if(local.blewup == 1) { radiusdamage (self.origin + ( 0 0 75 )) 500 600 } // this must be one frame after other damages in this thread, otherwise chain-reaction kills will not count.

	wait local.resettime

	if(self.nebelwerfer.trigenter != NIL && self.nebelwerfer.trigenter != NULL) { self.nebelwerfer.trigenter remove }
	self.nebelwerfer.model = local.model
	self.nebelwerfer.dead = 0
	self.nebelwerfer.nebelfirecount = 0
	self.nebelwerfer.wplayer = NIL
	self remove
	thread main local.turret local.health local.resettime local.origin local.angles
end

////////////////////////////////////////////////////////////////////////

scriptmaster:

level.mapname = getcvar "mapname"
local.master = spawn scriptmaster

if(level.mapname != "m3l2" && level.mapname != "m5l2a" && level.mapname != "m5l2b" && level.mapname != "m5l3" && level.flak88scriptmaster != 1)
{
	if(level.mapname != "m1l3a" && level.mapname != "m1l3b" && level.mapname != "m1l3c")
	{
		local.master aliascache flak_snd_move sound/vehicle/veh_tank_turret1.wav soundparms .9 .2 .9 .2 800 4000 auto loaded maps level.mapname
	}

	if(level.mapname == "m2l1" || level.mapname == "m2l2a" || level.mapname == "m2l2b" || level.mapname == "m2l2c" || level.mapname == "m2l3" || level.mapname == "m3l1a" || level.mapname == "m3l1b" || level.mapname == "m4l0" || level.mapname == "m4l1" || level.mapname == "m4l2" || level.mapname == "m4l3" || level.mapname[2] == "/")
	{
		local.master aliascache explode_flak881 sound/weapons/explo/Explo_MetalMed1.wav soundparms 1 .2 .9 .2 2000 9000 weapon loaded maps level.mapname
		local.master aliascache explode_flak882 sound/weapons/explo/Explo_MetalMed2.wav soundparms 1 .2 .9 .2 2000 9000 weapon loaded maps level.mapname
		local.master aliascache explode_flak883 sound/weapons/explo/Explo_MetalMed3.wav soundparms 1 .2 .9 .2 2000 9000 weapon loaded maps level.mapname
		local.master aliascache explode_flak884 sound/weapons/explo/Explo_MetalMed4.wav soundparms 1 .2 .9 .2 2000 9000 weapon loaded maps level.mapname
	}
}
if(level.mapname != "m3l3")
{
	local.master aliascache nebelwerfer_launch1 sound/weapons/fire/nebelwerfer1.wav soundparms 1.85 0 .8 .4 2000 5000 auto loaded maps level.mapname
	local.master aliascache nebelwerfer_launch2 sound/weapons/fire/nebelwerfer2.wav soundparms 1.85 0 .8 .4 2000 5000 auto loaded maps level.mapname
	local.master aliascache nebelwerfer_launch3 sound/weapons/fire/nebelwerfer3.wav soundparms 1.85 0 .8 .4 2000 5000 auto loaded maps level.mapname
}
if(level.mapname != "m1l1" && level.mapname != "m3l3" && level.mapname != "m5l1a" && level.mapname != "m5l1b" && level.mapname != "m5l2a" && level.mapname != "m5l2b" && level.mapname != "m5l3" && level.mapname != "m5l1a" && level.mapname != "m5l1a" && level.mapname[2] != "/" && level.mapname[3] != "/")
{
	local.master aliascache snd_bazooka_pullout sound/weapons/foley/BazookaForward1.wav soundparms 1 .2 .9 .1 800 2000 item loaded maps level.mapname
}
if(level.scriptmaster_sndmove != 1)
{
	local.master aliascache snd_move sound/null.wav soundparms .4 .2 .9 .2 160 1600 auto loaded maps level.mapname
}
level.scriptmaster_sndmove = 1
end