main local.origin0 local.origin1 local.origin2 local.origin3 local.origin4 local.origin5 local.origin6 local.origin7 local.origin8 local.origin9:

exec global/aliascache_triggersounds.scr grenade_ammo

level.spot_grenade[0] = ( local.origin0 ) + ( 0 0 15 )
if(local.origin1 != NIL) { level.spot_grenade[1] = ( local.origin1 ) + ( 0 0 15 ) }
if(local.origin2 != NIL) { level.spot_grenade[2] = ( local.origin2 ) + ( 0 0 15 ) }
if(local.origin3 != NIL) { level.spot_grenade[3] = ( local.origin3 ) + ( 0 0 15 ) }
if(local.origin4 != NIL) { level.spot_grenade[4] = ( local.origin4 ) + ( 0 0 15 ) }
if(local.origin5 != NIL) { level.spot_grenade[5] = ( local.origin5 ) + ( 0 0 15 ) }
if(local.origin6 != NIL) { level.spot_grenade[6] = ( local.origin6 ) + ( 0 0 15 ) }
if(local.origin7 != NIL) { level.spot_grenade[7] = ( local.origin7 ) + ( 0 0 15 ) }
if(local.origin8 != NIL) { level.spot_grenade[8] = ( local.origin8 ) + ( 0 0 15 ) }
if(local.origin9 != NIL) { level.spot_grenade[9] = ( local.origin9 ) + ( 0 0 15 ) }

local.random1 = randomint(level.spot_grenade.size)
local.randomold1 = local.random1

local.marker3 = spawn script_model targetname "grenade_ammotrig"
local.marker3 model "weapons/M2frag_grenade.tik"
local.marker3.origin = level.spot_grenade[local.random1] + ( 0 0 10 )
local.marker3.angles = ( 0 0 0 )
local.marker3 scale 2.5
//local.marker3 light 1 0 0 100
local.marker3 notsolid
//local.marker3 time 15
//local.marker3 thread Rotatex // after an unknown amount of map time, the trigger model might stop rotating. flickerrotate.scr fixes this issue.

local.marker4 = spawn script_model targetname "grenade_ammotrig_2"
local.marker4 model "weapons/steilhandgranate.tik"
local.marker4.origin = level.spot_grenade[local.random1]
local.marker4.angles = ( 0 0 0 )
local.marker4 scale 1.75
//local.marker4 light .5 1 0 50
local.marker4 notsolid
//local.marker4 time 15
//local.marker4 thread Rotatexx

local.trig1 = spawn trigger_use
local.trig1.origin = level.spot_grenade[local.random1]
local.trig1 setsize ( -20 -20 -20 ) ( 20 20 20 )
//local.trig1 message "*** Given some grenades. ****"
local.trig1 setthread grenade_ammo
local.trig1.pickedup = 0

exec global/flickerrotate.scr grenade_ammotrig ( .85 0 0 ) 100 15 5 5
wait 1
exec global/flickerrotate.scr grenade_ammotrig_2 ( .35 .85 0 ) 50 15 15 5 1
thread glue local.trig1 local.marker3 local.marker4 local.random1

while(1)
{
	local.trig1 waittill trigger
	local.marker3 hide
	local.marker4 hide
	local.trig1 nottriggerable

	waitframe // allows local.trig.pickedup to update first
	local.randomold1 = local.random1
	local.random1 = randomint(level.spot_grenade.size) 

	if(local.randomold1 == local.random1) { local.random1 = randomint(level.spot_grenade.size)
	if(local.randomold1 == local.random1) { local.random1 = randomint(level.spot_grenade.size) 
	if(local.randomold1 == local.random1) { local.random1 = randomint(level.spot_grenade.size) 
	if(local.randomold1 == local.random1) { local.random1 = randomint(level.spot_grenade.size) 
	if(local.randomold1 == local.random1) { local.random1 = randomint(level.spot_grenade.size) 
	} } } } }

	if(local.trig1.pickedup != 0)
	{
		local.marker3.origin = level.spot_grenade[local.random1] + ( 0 0 10 )
		local.marker4.origin = level.spot_grenade[local.random1]
		local.trig1.origin = level.spot_grenade[local.random1]
		local.trig1.int = local.random1
	}

	wait 0.1
	local.marker3 show
	local.marker4 show
	local.trig1 triggerable
}
end

glue local.trig local.model1 local.model2 local.r:

	local.trig.int = local.r
	while(1)
	{
		local.trig.origin = level.spot_grenade[local.trig.int]
		local.model1.origin = level.spot_grenade[local.trig.int]
		local.model2.origin = level.spot_grenade[local.trig.int]
		waitframe
	}
end

grenade_ammo:

	local.player = parm.other
	if(local.player.dead == 1)
	{
		self.pickedup = 0
		self message ""
		end
	}
	self.pickedup = 1
	self message "*** Given +5 grenades. ****"
	//local.player stufftext "say *** Grenade Ammo Spot is on the move!!! ***"
	local.ammo = spawn "items/item_grenade_ammobox.tik"
	local.ammo.origin = local.player.origin

	waitframe
	local.player playsound m2fragpickup
	local.player playsound steilhandgranatepickup
	local.ammo remove
	self triggerable
end 

Rotatex:

	while(self)
	{
		self.angles = (self.angles + ( 05 -03 07 ))
		waitframe
	}

end

Rotatexx:

	while(self)
	{
		self.angles = (self.angles + ( -05 03 -07 ))
		waitframe
	}

end
 