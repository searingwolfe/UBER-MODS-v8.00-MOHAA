main local.pathname local.position local.bombsoff local.offtime local.bulletstokill local.killtime local.randomizepath:

exec global/aliascache_triggersounds.scr airstrikes

 if(level.airspace_toobusy != 1)
 {
	waitframe // need this, so two "bomberplane" threads can begin before airspace_toobusy = 1 in the 1st thread.
	level.airspace_toobusy = 1

	local.plane = spawn script_model
	if(local.pathname == "allies") { local.plane model "vehicles/p47fly.tik" }
	if(local.pathname == "axis") { local.plane model "vehicles/fockwulffly.tik" }
	if(local.pathname == "final") { local.plane model "vehicles/fockwulffly.tik" }
	local.plane.scale = 1
	local.plane.origin = $bomberpathh.origin
	local.plane.angles = $bomberpathh.angles
	local.plane notsolid
	local.plane show
	local.plane.pathname = local.pathname

	local.plane thread damagetrigger local.position local.pathname local.bulletstokill
	local.plane thread killplane local.position local.pathname local.killtime

	local.plane playsound airplane_flyover
	local.plane loopsound airplane_idle
	local.plane followpath $bomberpathh
	if(local.position != "second" && local.bombsoff != 1) { iprintlnbold "*** Airstrike Carpet Bomb Incoming! Take Cover! ***"; println("----- Airstrike Carpet Bomb Incoming!") }

	if(local.bombsoff != 1) { local.plane thread bombdropcoords local.pathname local.position } // drop bombs from the planes, coords are preset for allies, axis, final pathnames.

	if(local.position == "second") { wait 1 } // second plane waits 1 second before beginning "waitmove".
	local.plane waitmove

	local.plane stoploopsound
	local.plane remove
	level.airspace_toobusy = 0

	if(local.position != "second") { wait 1 }

	if(local.randomizepath == 1 && local.position != "second")
	{
		local.r = randomint(3)
		if(local.r == 0) { exec maps/training_mapscripts/airstrikebombs.scr::splinepath_change allies }
		if(local.r == 1) { exec maps/training_mapscripts/airstrikebombs.scr::splinepath_change axis }
		if(local.r == 2) { exec maps/training_mapscripts/airstrikebombs.scr::splinepath_change final }
	}

	if(local.offtime > 0 && local.offtime != NIL)
	{ 
		wait local.offtime
		thread main local.pathname local.position local.bombsoff local.offtime local.bulletstokill local.killtime 
	}		// this turns on continuous airstrikes, only if airstrikebombs.scr::main is exec'd from main map script and given an offtime > 0.
 }
end

////////////////////////////////////////////////////////////////////////

damagetrigger local.position local.pathname local.bulletstokill:

	local.trigger = spawn trigger_multiple spawnflags 128 // only responds to bullets and explosions occuring near them
	local.trigger.origin = self.origin
	local.trigger setsize ( -300 -300 -100 ) ( 300 300 100 )
	local.trigger.triggered = 0
	local.trigger setthread triggered

	if(local.bulletstokill == NIL || local.bulletstokill < 1) { local.bulletstokill = 10 } // default = 10 bullets

	local.pathpos = local.position + local.pathname
	level.planedead[local.pathpos] = 0
	
	while(self != NULL && level.planedead[local.pathpos] == 0) 
	{ 
		local.player = parm.other	   // since multiple flying bombs will have the same targetname, the for-loop below will account for any & all
		local.trigger.origin = self.origin // make sure the trigger stays on the plane.  	      // bombs (light bombs, giant bombs) flying in the air.

		if(local.trigger.triggered >= local.bulletstokill) { level.planedead[local.pathpos] = 1 }
		if(local.player != NULL && local.trigger istouching local.player) { local.player volumedamage 999 } // kill any player that touches the plane

		for(local.p = 0; local.p <= $player.size; local.p++)
		{
			if($("bigbombweap" + local.p) != NULL && local.trigger istouching $("bigbombweap" + local.p)) { level.planedead[local.pathpos] = 2 }
			if($("lightbombweap" + local.p) != NULL && local.trigger istouching $("lightbombweap" + local.p)) { level.planedead[local.pathpos] = 2 }
		}
		waitframe
	}
	local.trigger remove 
end

////////////////////////////////////////////////////////////////////////

triggered: // if the plane gets shot or otherwise triggered "bulletstokill"+ times, then kill the plane.

	self.triggered++
end

////////////////////////////////////////////////////////////////////////

killplane local.position local.pathname local.killtime:

	if(local.killtime == NIL) { local.killtime = 2.5 } // default = 2.5 seconds
	local.pathpos = local.position + local.pathname

	while(level.planedead[local.pathpos] != 1 && level.planedead[local.pathpos] != 2) { waitframe; if(self == NULL) { end } }
	
	if(level.planedead[local.pathpos] == 1) // if the plane was shot at, begin a smoke trail and wait a few seconds before exploding.
	{
		local.flyingexplosion = spawn script_model
		local.flyingexplosion model "emitters/fire.tik"
		local.flyingexplosion.origin = self.origin
		local.flyingexplosion.scale = 1	
		local.flyingexplosion anim start
		local.flyingexplosion notsolid
		local.flyingexplosion glue self

		local.flyingsmoke = spawn script_model
		local.flyingsmoke model "emitters/planesmokefly.tik"	
		local.flyingsmoke.origin = self.origin
		local.flyingsmoke.scale = 1		
		local.flyingsmoke anim start
		local.flyingsmoke notsolid
		local.flyingsmoke glue self
		
		local.killtime = local.killtime * 10 // each while loop increments 10 times a second.
		local.n = 0

		while(self != NULL && local.n < local.killtime) 
		{ 
			if(local.pathname == "allies" && self.origin[0] >= $aa10.origin[0] && self.origin[1] >= $aa10.origin[1]) 
			{ 
				local.outofmap = 1; waitframe; break 
			}
			if((local.pathname == "axis" || local.pathname == "final") && self.origin[0] <= $aa10.origin[0] && self.origin[1] <= $aa10.origin[1]) 
			{ 
				local.outofmap = 2 ; waitframe; break
			}
			local.n++ 
			wait 0.1
		}
		local.flyingsmoke remove // while-loop keeps looping until "killtime" seconds are done, or until the plane reaches splinepath node $aa10.
		local.flyingexplosion remove
	}

	local.Exp = spawn script_model
	local.Exp model "fx/fx_truck_explosion.tik"
	if(self != NULL) { local.Exp.origin = self.origin + ( 0 0 -35 ) }
	if(self == NULL || local.outofmap == 1) { local.Exp.origin = $aa10.origin + ( -50 -50 -50 ) } // near splinepath node $aa10, corners of map
	if(self == NULL || local.outofmap == 2) { local.Exp.origin = $aa10.origin + ( 50 50 -50 ) } // near splinepath node $aa10, corners of map
	local.Exp.scale = 2.5
	local.Exp notsolid
	local.Exp anim idle
	
	local.Exp2 = spawn script_model
	local.Exp2 model "fx/barrel_gas_destroyed.tik"
	if(self != NULL) { local.Exp2.origin = self.origin + ( 0 0 -35 ) }
	if(self == NULL || local.outofmap == 1) { local.Exp2.origin = $aa10.origin + ( -50 -50 -50 ) }
	if(self == NULL || local.outofmap == 2) { local.Exp2.origin = $aa10.origin + ( 50 50 -50 ) }
	local.Exp2.scale = 2
	local.Exp2 notsolid
	local.Exp2 anim idle

	self hide // do not remove the plane. otherwise the planes will not be 1 second apart from each other for the next airstrike.

	wait 0.1 // sometimes, waitframe isn't long enough for barrel explosion to appear.
	local.Exp anim aaaa
	local.Exp2 anim dummy
	local.Exp remove
	local.Exp2 remove
	if(self != NULL) { self stopsound; self stoploopsound }
end

////////////////////////////////////////////////////////////////////////

dropbomb local.origin local.waittime local.speed local.zrotate local.damageradius local.position: // local.plane thread dropbomb ( 0 0 0 ) 2.5 2500 45 350

	local.bombpoint = spawn script_origin origin ( local.origin ) // bombdrop destination
	local.pathpos = local.position + self.pathname

	wait local.waittime // time until bomb drops, while plane is flying down its path

	if(level.planedead[local.pathpos] != 1 && level.planedead[local.pathpos] != 2)
	{
	local.bomb = spawn script_model
	local.bomb model ammo/us_bomb.tik
	local.bomb.scale = 1.5
	local.bomb.origin = self.origin
	local.bomb.angle = self.angle + 90
	local.bomb light 1 0 0 300
	waitframe

	local.bomb thread movestuck_fix local.bombpoint
	local.bomb moveto local.bombpoint
	local.bomb speed local.speed // speed to travel from plane to ground
	local.bomb rotatez local.zrotate // point bomb nose-down over time
	local.bomb waitmove
	if(local.bomb != NULL) { local.bomb explode }
	waitframe
	if(local.bomb != NULL) { local.bomb remove }

	local.boom = spawn script_model
	local.boom model animate/fx_mortar_dirt.tik // emitters/fx_explosion_mine.tik
	local.boom.origin = local.bombpoint.origin
	local.boom.scale = 1.5 // = 1 if using fx_explosion_mine.tik
	local.boom anim start
	waitframe
	local.boom anim stop
	radiusdamage local.boom 200 local.damageradius
	}

	if(local.boom != NIL && local.boom != NULL) { local.boom remove }
	local.bombpoint remove
end

movestuck_fix local.bombpoint:

	//local.c = 0
	//while(self != NULL) { local.c = local.c + 0.1; wait 0.1 }  // use these 3 lines to count exactly how long each bomb takes to touch the ground and explode, after each one is dropped.
	//println(local.c)

	local.n = 0			    					// if bomb is dropped onto a tank, for example, sometimes the bomb will get stuck on the tank and never blow up.
 	while(self != NULL && self.origin != local.bombpoint) // when the bomb takes too long to explode, this thread forces the bomb to explode. 
 	{	    
		if(local.n == 3.000)
		{
			self explode
			waitframe
			if(self != NULL) { self remove }
			end
		}
		if(local.n >= 3.000 || local.bombpoint == NIL) { end }

		local.n = local.n + 0.100 // just in case, make sure to keep significant figures >= the # of "sigfigs" that if-statements are checking.
 		wait 0.1
	}
end

////////////////////////////////////////////////////////////////////////

// plane angles = ( pitch, yaw, roll )
// +pitch = nose down, -pitch = nose up
// +roll = raise left wing, -roll = raise right wing
// yaw = "coord" player angles: ( 0 yaw 0 )

splinepath: // all splinepath threads must be loaded in before "level waittill spawn". splinepaths cannot be spawned in afterwards.

	spawn info_splinepath targetname bomberpathh // "$bomberpath" is already used in "training.bsp" map file.
	$bomberpathh.origin = ( -7904 -4376 1112 ) // z - 40 below skybox ceiling
	$bomberpathh.angles = ( -5 90 0 )
	$bomberpathh speed 1.35

	spawn info_splinepath targetname aa0
	$aa0.origin = ( -7904 -3376 1112 )
	$aa0.angles = ( -5 90 30 )
	$aa0 speed 1.35

	spawn info_splinepath targetname aa1
	$aa1.origin = ( -7257 -575 1112 )
	$aa1.angles = ( -5 77 60 ) + ( 0 -15 0 )
	$aa1 speed 1.5

	spawn info_splinepath targetname aa2
	$aa2.origin = ( -6136 220 1112 )
	$aa2.angles = ( -5 35.5 60 ) + ( 0 -15 0 )
	$aa2 speed 1.35

	spawn info_splinepath targetname aa3
	$aa3.origin = ( -2684 220 1000 )
	$aa3.angles = ( -5 0 60 ) + ( 0 -25 0 )
	$aa3 speed 1.5

	spawn info_splinepath targetname aa4
	$aa4.origin = ( -1896 -198 1000 )
	$aa4.angles = ( -5 -28 60 ) + ( 0 -45 0 )
	$aa4 speed 1.5

	spawn info_splinepath targetname aa5
	$aa5.origin = ( -1308 -2064 1000 )
	$aa5.angles = ( -5 -73 -60 ) + ( 0 25 0 )
	$aa5 speed 1.5

	spawn info_splinepath targetname aa6
	$aa6.origin = ( -609 -2760 1000 )	
	$aa6.angles = ( -5 -46 -60 ) + ( 0 15 0 )
	$aa6 speed 1.35

	spawn info_splinepath targetname aa7
	$aa7.origin = ( 1600 -2760 1000 )
	$aa7.angles = ( -5 0 -45 )
	$aa7 speed 1.35

	spawn info_splinepath targetname aa8
	$aa8.origin = ( 4710 -2760 1496 )
	$aa8.angles = ( -5 0 -60 ) + ( 0 15 0 )
	$aa8 speed 1.35

	spawn info_splinepath targetname aa9
	$aa9.origin = ( 6031 -1811 1496 )
	$aa9.angles = ( -5 35.5 -60 ) + ( 0 25 0 )
	$aa9 speed 1.35

	spawn info_splinepath targetname aa10
	$aa10.origin = ( 6584 3344 1496 )
	$aa10.angles = ( -5 84 -30 ) + ( 0 10 0 )
	$aa10 speed 1.25

	spawn info_splinepath targetname aa11 // make sure the last node's coords (far out of map bounds to maintain plane's speed after it leaves skybox)
	$aa11.origin = ( 7584 4344 1496 )     // are increased in both X and Y, otherwise "killplane" thread will not work properly.
	$aa11.angles = ( 0 90 0 )
	$aa11 speed 1.25

	$bomberpathh.target = $aa0
	$aa0.target = $aa1
	$aa1.target = $aa2
	$aa2.target = $aa3
	$aa3.target = $aa4
	$aa4.target = $aa5
	$aa5.target = $aa6
	$aa6.target = $aa7
	$aa7.target = $aa8
	$aa8.target = $aa9
	$aa9.target = $aa10
	$aa10.target = $aa11
end

splinepath_change local.pathname: // reduce map's number of entities by changing splinepath origins if pathname changes, instead of spawning in 3 full splinepaths.
				  // this method only works when only one airstrike is allowed on the map at a given time (level.airspace_toobusy = 1).
   if(local.pathname == "allies") 
   { 	
	$bomberpathh.origin = ( -7904 -4376 1112 ) // z - 40 below skybox ceiling
	$bomberpathh.angles = ( -5 90 0 )
	$bomberpathh speed 1.35

	$aa0.origin = ( -7904 -3376 1112 )
	$aa0.angles = ( -5 90 30 )
	$aa0 speed 1.35

	$aa1.origin = ( -7257 -575 1112 )
	$aa1.angles = ( -5 77 60 ) + ( 0 -15 0 )
	$aa1 speed 1.5

	$aa2.origin = ( -6136 220 1112 )
	$aa2.angles = ( -5 35.5 60 ) + ( 0 -15 0 )
	$aa2 speed 1.35

	$aa3.origin = ( -2684 220 1000 )
	$aa3.angles = ( -5 0 60 ) + ( 0 -25 0 )
	$aa3 speed 1.5

	$aa4.origin = ( -1896 -198 1000 )
	$aa4.angles = ( -5 -28 60 ) + ( 0 -45 0 )
	$aa4 speed 1.5

	$aa5.origin = ( -1308 -2064 1000 )
	$aa5.angles = ( -5 -73 -60 ) + ( 0 25 0 )
	$aa5 speed 1.5

	$aa6.origin = ( -609 -2760 1000 )	
	$aa6.angles = ( -5 -46 -60 ) + ( 0 15 0 )
	$aa6 speed 1.35

	$aa7.origin = ( 1600 -2760 1000 )
	$aa7.angles = ( -5 0 -45 )
	$aa7 speed 1.35

	$aa8.origin = ( 4710 -2760 1496 )
	$aa8.angles = ( -5 0 -60 ) + ( 0 15 0 )
	$aa8 speed 1.35

	$aa9.origin = ( 6031 -1811 1496 )
	$aa9.angles = ( -5 35.5 -60 ) + ( 0 25 0 )
	$aa9 speed 1.35

	$aa10.origin = ( 6584 3344 1496 )
	$aa10.angles = ( -5 84 -30 ) + ( 0 10 0 )
	$aa10 speed 1.25

	$aa11.origin = ( 7584 4344 1496 )
	$aa11.angles = ( 0 90 0 )
	$aa11 speed 1.25
   }
   if(local.pathname == "axis")
   {
	$aa11.origin = ( -8904 -4376 1112 ) // z - 40 below skybox ceiling
	$aa11.angles = ( -5 90 0 ) + ( 0 180 0 )
	$aa11 speed 1.35

	$aa10.origin = ( -7904 -3376 1112 )
	$aa10.angles = ( -5 90 -30 ) + ( 0 180 0 )
	$aa10 speed 1.35

	$aa9.origin = ( -7257 -575 1112 )
	$aa9.angles = ( -5 77 -60 ) + ( 0 -15 0 ) + ( 0 180 0 )
	$aa9 speed 1.5

	$aa8.origin = ( -6136 220 1112 )
	$aa8.angles = ( -5 35.5 -60 ) + ( 0 -15 0 ) + ( 0 180 0 )
	$aa8 speed 1.35

	$aa7.origin = ( -2684 220 1000 )
	$aa7.angles = ( -5 0 -60 ) + ( 0 -25 0 ) + ( 0 180 0 )
	$aa7 speed 1.5

	$aa6.origin = ( -1896 -198 1000 )
	$aa6.angles = ( -5 -28 -60 ) + ( 0 -45 0 ) + ( 0 180 0 )
	$aa6 speed 1.5

	$aa5.origin = ( -1308 -2064 1000 )
	$aa5.angles = ( -5 -73 60 ) + ( 0 25 0 ) + ( 0 180 0 )
	$aa5 speed 1.5

	$aa4.origin = ( -609 -2760 1000 )	
	$aa4.angles = ( -5 -46 60 ) + ( 0 15 0 ) + ( 0 180 0 )
	$aa4 speed 1.35

	$aa3.origin = ( 1600 -2760 1000 )
	$aa3.angles = ( -5 0 45 ) + ( 0 180 0 )
	$aa3 speed 1.35

	$aa2.origin = ( 4710 -2760 1496 )
	$aa2.angles = ( -5 0 60 ) + ( 0 15 0 ) + ( 0 180 0 )
	$aa2 speed 1.35

	$aa1.origin = ( 6031 -1811 1496 )
	$aa1.angles = ( -5 35.5 60 ) + ( 0 25 0 ) + ( 0 180 0 )
	$aa1 speed 1.35

	$aa0.origin = ( 6584 3344 1496 )
	$aa0.angles = ( -5 84 30 ) + ( 0 10 0 ) + ( 0 180 0 )
	$aa0 speed 1.25

	$bomberpathh.origin = ( 6584 4344 1496 )
	$bomberpathh.angles = ( 0 90 0 ) + ( 0 180 0 )
	$bomberpathh speed 1.25
   }
   if(local.pathname == "final")
   {
	$aa11.origin = ( -8904 -4376 1112 ) // z - 40 below skybox ceiling
	$aa11.angles = ( -5 90 0 ) + ( 0 180 0 ) // make sure the last node's coords (far out of map bounds to maintain plane's speed after it leaves skybox)
	$aa11 speed 1.35			 // are increased in both X and Y, otherwise "killplane" thread will not work properly.

	$aa10.origin = ( -7904 -3376 1112 )
	$aa10.angles = ( -5 90 -30 ) + ( 0 180 0 )
	$aa10 speed 1.35

	$aa9.origin = ( -7257 -575 1112 )
	$aa9.angles = ( -5 77 -60 ) + ( 0 -15 0 ) + ( 0 180 0 )
	$aa9 speed 1.5

	$aa8.origin = ( -6136 220 1112 )
	$aa8.angles = ( -5 35.5 -60 ) + ( 0 -15 0 ) + ( 0 180 0 )
	$aa8 speed 1.35

	$aa7.origin = ( -2684 220 1000 )
	$aa7.angles = ( -5 0 -60 ) + ( 0 -25 0 ) + ( 0 180 0 )
	$aa7 speed 1.5

	$aa6.origin = ( -1896 -198 1000 )
	$aa6.angles = ( -5 -28 -60 ) + ( 0 -45 0 ) + ( 0 180 0 )
	$aa6 speed 1.5

	$aa5.origin = ( -1308 -2064 1000 )
	$aa5.angles = ( -5 -73 60 ) + ( 0 25 0 ) + ( 0 180 0 )
	$aa5 speed 1.5

	$aa4.origin = ( -609 -2760 1000 )	
	$aa4.angles = ( -5 -46 60 ) + ( 0 15 0 ) + ( 0 180 0 )
	$aa4 speed 1.35

	$aa3.origin = ( 1600 -2760 1000 )
	$aa3.angles = ( -5 0 45 ) + ( 0 180 0 )
	$aa3 speed 1.35

	$aa2.origin = ( 4040 -927 1496 )
	$aa2.angles = ( -5 -90 60 ) + ( 0 -25 0 )
	$aa2 speed 1.35

	$aa1.origin = ( 4040 1379 1496 )
	$aa1.angles = ( -5 -38 60 ) + ( 0 -25 0 )  
	$aa1 speed 1.35

	$aa0.origin = ( 1511 3344 1496 )
	$aa0.angles = ( -5 -38 60 ) + ( 0 -10 0 ) 
	$aa0 speed 1.35

	$bomberpathh.origin = ( 1011 3344 1496 )
	$bomberpathh.angles = ( 0 -38 0 )
	$bomberpathh speed 1.25
   }
end

////////////////////////////////////////////////////////////////////////

bombdropcoords local.pathname local.position:

   if(local.pathname == "allies")
   {
	if(local.position != "second") // "first"
	{
		waitframe
		self thread dropbomb ( -1683 -1167 -127 ) 4.90 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -1613 -1802 -374 ) 5.00 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -807 -2590 -323 ) 5.10 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -321 -2384 -387 ) 5.20 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -65 -2934 -395 ) 5.30 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 83 -2263 -127 ) 5.40 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 700 -3093 -387 ) 5.50 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 700 -2263 -127 ) 5.60 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 1065 -2795 -387 ) 5.70 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 1120 -3233 -382 ) 5.80 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 1765 -2795 -387 ) 5.90 1700 55 500 local.position
		waitframe

		self thread dropbomb ( 3030 -2755 -387 ) 6.20 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4440 -2755 -387 ) 6.30 1700 55 500 local.position
		waitframe
	}     
	if(local.position == "second")
	{
		waitframe
		self thread dropbomb ( -1683 -1401 -318 ) 5.95 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -1430 -2250 -369 ) 6.05 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -500 -2795 -395 ) 6.15 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -225 -3306 -383 ) 6.25 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 75 -2507 -387 ) 6.35 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 180 -3462 -387 ) 6.45 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 700 -2507 -387 ) 6.55 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 700 -3345 -127 ) 6.65 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 1171 -2357 -387 ) 6.75 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 1415 -2795 -387 ) 6.85 1700 55 500 local.position
		waitframe

		self thread dropbomb ( 2325 -2755 -387 ) 7.15 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 3735 -2755 -387 ) 7.25 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 5145 -2755 -387 ) 7.35 1700 55 500 local.position
		waitframe
	}
   }
   if(local.pathname == "axis")
   {
	if(local.position != "second") // "first"
	{
		//waitframe
		//self thread dropbomb ( 4440 -2755 -387 ) 3.10 1700 55 500 local.position
		//waitframe
		//self thread dropbomb ( 3030 -2755 -387 ) 3.20 1700 55 500 local.position
		//waitframe

		self thread dropbomb ( -1683 -1167 -127 ) 5.30 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -1696 -472 -311 ) 5.40 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -2068 -41 -357 ) 5.50 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -2713 -41 -383 ) 5.60 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -3192 -10 -191 ) 5.70 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -3832 -127 -319 ) 5.80 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -4336 -607 -309 ) 5.90 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -4531 168 -319 ) 6.00 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -4895 376 -309 ) 6.10 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -5150 -826 -309 ) 6.20 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -5200 -20 -319 ) 6.30 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -5464 349 -309 ) 6.40 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -5856 489 -309 ) 6.50 1700 55 500 local.position
		waitframe
	}     
	if(local.position == "second")
	{
		//waitframe
		//self thread dropbomb ( 5145 -2755 -387 ) 4.05 1700 55 500 local.position
		//waitframe
		//self thread dropbomb ( 3735 -2755 -387 ) 4.15 1700 55 500 local.position
		//waitframe
		//self thread dropbomb ( 2325 -2755 -387 ) 4.25 1700 55 500 local.position
		//waitframe

		self thread dropbomb ( -1696 -872 -309 ) 6.35 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -1837 -131 -309 ) 6.45 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -2434 -41 -396 ) 6.55 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -2990 -27 -319 ) 6.65 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -3486 141 -319 ) 6.75 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -4310 -20 -319 ) 6.85 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -4345 572 -309 ) 6.95 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -4856 -465 -309 ) 7.05 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -5180 595 -309 ) 7.15 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -5408 -477 -309 ) 7.25 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -5750 -20 -319 ) 7.35 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -5853 -527 -309 ) 7.45 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -6100 -20 -319 ) 7.55 1700 55 500 local.position
		waitframe
	}
   }
   if(local.pathname == "final")
   {
	if(local.position != "second") // "first"
	{
		waitframe
		self thread dropbomb ( 3382 2611 -395 ) 2.20 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4315 2346 -405 ) 2.30 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4520 1437 -403 ) 2.40 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4520 437 -403 ) 2.50 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4520 -563 -403 ) 2.60 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4585 -1563 -403 ) 2.70 1700 55 500 local.position
		waitframe

		self thread dropbomb ( 4440 -2755 -387 ) 2.85 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 3030 -2755 -387 ) 2.95 1700 55 500 local.position
		waitframe

		self thread dropbomb ( 1765 -2795 -387 ) 3.20 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 1120 -3233 -382 ) 3.30 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 1065 -2795 -387 ) 3.40 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 700 -2263 -127 ) 3.50 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 700 -3093 -387 ) 3.60 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 83 -2263 -127 ) 3.70 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -65 -2934 -395 ) 3.80 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -321 -2384 -387 ) 3.90 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -807 -2590 -323 ) 4.00 1700 55 500 local.position
		waitframe
	}     
	if(local.position == "second")
	{
		waitframe
		self thread dropbomb ( 3116 3248 -114 ) 3.15 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 3755 1995 -403 ) 3.25 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4520 1937 -403 ) 3.35 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4520 937 -403 ) 3.45 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4520 -63 -403 ) 3.55 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4520 -1063 -403 ) 3.65 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 4520 -2241 -303 ) 3.75 1700 55 500 local.position
		waitframe

		self thread dropbomb ( 3735 -2755 -387 ) 3.90 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 2325 -2755 -387 ) 4.00 1700 55 500 local.position
		waitframe

		self thread dropbomb ( 1415 -2795 -387 ) 4.25 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 1171 -2357 -387 ) 4.35 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 700 -3345 -127 ) 4.45 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 700 -2507 -387 ) 4.55 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 180 -3462 -387 ) 4.65 1700 55 500 local.position
		waitframe
		self thread dropbomb ( 75 -2507 -387 ) 4.75 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -225 -3306 -383 ) 4.85 1700 55 500 local.position
		waitframe
		self thread dropbomb ( -500 -2795 -395 ) 4.95 1700 55 500 local.position
		waitframe
	}
   }
end

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////

splinepath_seenodes:

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( -7904 -3376 1112 )
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( -7257 -575 1112 )
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( -6136 220 1112 )
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( -2684 220 1000 )
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( -1896 -198 1000 )
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( -1308 -2064 1000 )
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( -609 -2760 1000 )
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( 1600 -2760 1000 )
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( 4710 -2760 1496 )
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( 6031 -1811 1496 )
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( 6584 3344 1496 )
local.node1.scale = 5

/////

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( 4040 -927 1496 )
local.node1 solid
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( 4040 1379 1496 )
local.node1 solid
local.node1.scale = 5

local.node1 = spawn script_model
local.node1 model "fx/corona_red.tik"
local.node1.origin = ( 1511 3344 1496 )
local.node1 solid
local.node1.scale = 5
end
